{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "orderIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sizeDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "triggerPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "triggerAboveThreshold",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "executionFee",
          "type": "uint256"
        }
      ],
      "name": "CancelDecreaseOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "orderIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "purchaseToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "purchaseTokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sizeDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "triggerPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "triggerAboveThreshold",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "executionFee",
          "type": "uint256"
        }
      ],
      "name": "CancelIncreaseOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "orderIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "triggerRatio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "triggerAboveThreshold",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "shouldUnwrap",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "executionFee",
          "type": "uint256"
        }
      ],
      "name": "CancelSwapOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "orderIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiveToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sizeDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "triggerPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "triggerAboveThreshold",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "executionFee",
          "type": "uint256"
        }
      ],
      "name": "CreateDecreaseOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "orderIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "purchaseToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "purchaseTokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sizeDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "triggerPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "triggerAboveThreshold",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "executionFee",
          "type": "uint256"
        }
      ],
      "name": "CreateIncreaseOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "orderIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "triggerRatio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "triggerAboveThreshold",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "shouldUnwrap",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "executionFee",
          "type": "uint256"
        }
      ],
      "name": "CreateSwapOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "orderIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sizeDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "triggerPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "triggerAboveThreshold",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "executionFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "executionPrice",
          "type": "uint256"
        }
      ],
      "name": "ExecuteDecreaseOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "orderIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "purchaseToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "purchaseTokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sizeDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "triggerPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "triggerAboveThreshold",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "executionFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "executionPrice",
          "type": "uint256"
        }
      ],
      "name": "ExecuteIncreaseOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "orderIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "triggerRatio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "triggerAboveThreshold",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "shouldUnwrap",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "executionFee",
          "type": "uint256"
        }
      ],
      "name": "ExecuteSwapOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "orderIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sizeDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "triggerPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "triggerAboveThreshold",
          "type": "bool"
        }
      ],
      "name": "UpdateDecreaseOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "orderIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sizeDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "triggerPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "triggerAboveThreshold",
          "type": "bool"
        }
      ],
      "name": "UpdateIncreaseOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ordexIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "triggerRatio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "triggerAboveThreshold",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "shouldUnwrap",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "executionFee",
          "type": "uint256"
        }
      ],
      "name": "UpdateSwapOrder",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "PRICE_PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDQ_PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_orderIndex",
          "type": "uint256"
        }
      ],
      "name": "cancelDecreaseOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_orderIndex",
          "type": "uint256"
        }
      ],
      "name": "cancelIncreaseOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_swapOrderIndexes",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_increaseOrderIndexes",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_decreaseOrderIndexes",
          "type": "uint256[]"
        }
      ],
      "name": "cancelMultiple",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_orderIndex",
          "type": "uint256"
        }
      ],
      "name": "cancelSwapOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiveToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_collateralDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_triggerPrice",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_triggerAboveThreshold",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_minOut",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_withdrawETH",
          "type": "bool"
        }
      ],
      "name": "createDecreaseOrder",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_path",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_amountIn",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_collateralToken",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isLong",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_triggerPrice",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_triggerAboveThreshold",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_executionFee",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_shouldWrap",
          "type": "bool"
        }
      ],
      "name": "createIncreaseOrder",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_path",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_triggerRatio",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_triggerAboveThreshold",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_executionFee",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_shouldWrap",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_shouldUnwrap",
          "type": "bool"
        }
      ],
      "name": "createSwapOrder",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "decreaseOrders",
      "outputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiveToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "collateralDelta",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "triggerPrice",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "triggerAboveThreshold",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "minOut",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "withdrawETH",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "executionFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "decreaseOrdersIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_orderIndex",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_feeReceiver",
          "type": "address"
        }
      ],
      "name": "executeDecreaseOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_orderIndex",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_feeReceiver",
          "type": "address"
        }
      ],
      "name": "executeIncreaseOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_orderIndex",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_feeReceiver",
          "type": "address"
        }
      ],
      "name": "executeSwapOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_orderIndex",
          "type": "uint256"
        }
      ],
      "name": "getDecreaseOrder",
      "outputs": [
        {
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "collateralDelta",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "triggerPrice",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "triggerAboveThreshold",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "executionFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_orderIndex",
          "type": "uint256"
        }
      ],
      "name": "getDecreaseOrderV2",
      "outputs": [
        {
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiveToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "collateralDelta",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "triggerPrice",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "triggerAboveThreshold",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "executionFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_orderIndex",
          "type": "uint256"
        }
      ],
      "name": "getIncreaseOrder",
      "outputs": [
        {
          "internalType": "address",
          "name": "purchaseToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "purchaseTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "triggerPrice",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "triggerAboveThreshold",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "executionFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "enum OrderType",
          "name": "_type",
          "type": "uint8"
        }
      ],
      "name": "getOrderKey",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_returnFirst",
          "type": "bool"
        }
      ],
      "name": "getShouldExecuteOrderList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint160[]",
          "name": "",
          "type": "uint160[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_orderIndex",
          "type": "uint256"
        }
      ],
      "name": "getSwapOrder",
      "outputs": [
        {
          "internalType": "address",
          "name": "path0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "path1",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "path2",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "triggerRatio",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "triggerAboveThreshold",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "shouldUnwrap",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "executionFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gov",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "increaseOrders",
      "outputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "purchaseToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "purchaseTokenAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "collateralToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "indexToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isLong",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "triggerPrice",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "triggerAboveThreshold",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "executionFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "increaseOrdersIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_weth",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_usdq",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minExecutionFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minPurchaseTokenAmountUsd",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isInitialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minExecutionFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minPurchaseTokenAmountUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "orderExecutor",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "orderList",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "size",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "router",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gov",
          "type": "address"
        }
      ],
      "name": "setGov",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minExecutionFee",
          "type": "uint256"
        }
      ],
      "name": "setMinExecutionFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minPurchaseTokenAmountUsd",
          "type": "uint256"
        }
      ],
      "name": "setMinPurchaseTokenAmountUsd",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_orderExecutor",
          "type": "address"
        }
      ],
      "name": "setOrderExecutor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "swapOrders",
      "outputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "triggerRatio",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "triggerAboveThreshold",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "shouldUnwrap",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "executionFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "swapOrdersIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_orderIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_collateralDelta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_triggerPrice",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_triggerAboveThreshold",
          "type": "bool"
        }
      ],
      "name": "updateDecreaseOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_orderIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_sizeDelta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_triggerPrice",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_triggerAboveThreshold",
          "type": "bool"
        }
      ],
      "name": "updateIncreaseOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_orderIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_triggerRatio",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_triggerAboveThreshold",
          "type": "bool"
        }
      ],
      "name": "updateSwapOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdq",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_triggerAboveThreshold",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_triggerPrice",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_indexToken",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_maximizePrice",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_raise",
          "type": "bool"
        }
      ],
      "name": "validatePositionOrderPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_path",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_triggerRatio",
          "type": "uint256"
        }
      ],
      "name": "validateSwapOrderPriceWithTriggerAboveThreshold",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x8a0955da269729eb694fff0f59c1d7f738d842d2e1d87551e3bb98d011730ac7",
  "receipt": {
    "to": null,
    "from": "0xc1048DB8e91E68b468b1d7B513fbB666C6e1622D",
    "contractAddress": "0x03Cd7506dd538BFd4D6c37Ebcd090b65AeD6B00C",
    "transactionIndex": 0,
    "gasUsed": "5310528",
    "logsBloom": "0x
    "blockHash": "0xf591f4683924e41f8be5679fd53bc4816f499c8d3f217b46ee1daaacc1e97368",
    "transactionHash": "0x8a0955da269729eb694fff0f59c1d7f738d842d2e1d87551e3bb98d011730ac7",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 32924583,
        "transactionHash": "0x8a0955da269729eb694fff0f59c1d7f738d842d2e1d87551e3bb98d011730ac7",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000c1048db8e91e68b468b1d7b513fbb666c6e1622d",
          "0x00000000000000000000000046a3a41bd932244dd08186e4c19f1a7e48cbcdf4"
        ],
        "data": "0x00000000000000000000000000000000000000000000000049b2c9145cb37c000000000000000000000000000000000000000000000000022e6d19288d31bf90000000000000000000000000000000000000000000001afc91426102814a962a000000000000000000000000000000000000000000000001e4ba5014307e4390000000000000000000000000000000000000000000001afcdaf52a16ddfe122a",
        "logIndex": 0,
        "blockHash": "0xf591f4683924e41f8be5679fd53bc4816f499c8d3f217b46ee1daaacc1e97368"
      }
    ],
    "blockNumber": 32924583,
    "cumulativeGasUsed": "5310528",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "b549c54e5dfcca391b304c942bb4c1db",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sizeDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"triggerPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"triggerAboveThreshold\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"executionFee\",\"type\":\"uint256\"}],\"name\":\"CancelDecreaseOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"purchaseToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"purchaseTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sizeDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"triggerPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"triggerAboveThreshold\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"executionFee\",\"type\":\"uint256\"}],\"name\":\"CancelIncreaseOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"triggerRatio\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"triggerAboveThreshold\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"shouldUnwrap\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"executionFee\",\"type\":\"uint256\"}],\"name\":\"CancelSwapOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiveToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sizeDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"triggerPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"triggerAboveThreshold\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"executionFee\",\"type\":\"uint256\"}],\"name\":\"CreateDecreaseOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"purchaseToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"purchaseTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sizeDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"triggerPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"triggerAboveThreshold\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"executionFee\",\"type\":\"uint256\"}],\"name\":\"CreateIncreaseOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"triggerRatio\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"triggerAboveThreshold\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"shouldUnwrap\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"executionFee\",\"type\":\"uint256\"}],\"name\":\"CreateSwapOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sizeDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"triggerPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"triggerAboveThreshold\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"executionFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"executionPrice\",\"type\":\"uint256\"}],\"name\":\"ExecuteDecreaseOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"purchaseToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"purchaseTokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sizeDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"triggerPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"triggerAboveThreshold\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"executionFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"executionPrice\",\"type\":\"uint256\"}],\"name\":\"ExecuteIncreaseOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"triggerRatio\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"triggerAboveThreshold\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"shouldUnwrap\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"executionFee\",\"type\":\"uint256\"}],\"name\":\"ExecuteSwapOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sizeDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"triggerPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"triggerAboveThreshold\",\"type\":\"bool\"}],\"name\":\"UpdateDecreaseOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sizeDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"triggerPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"triggerAboveThreshold\",\"type\":\"bool\"}],\"name\":\"UpdateIncreaseOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ordexIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"triggerRatio\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"triggerAboveThreshold\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"shouldUnwrap\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"executionFee\",\"type\":\"uint256\"}],\"name\":\"UpdateSwapOrder\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PRICE_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDQ_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_orderIndex\",\"type\":\"uint256\"}],\"name\":\"cancelDecreaseOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_orderIndex\",\"type\":\"uint256\"}],\"name\":\"cancelIncreaseOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_swapOrderIndexes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_increaseOrderIndexes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_decreaseOrderIndexes\",\"type\":\"uint256[]\"}],\"name\":\"cancelMultiple\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_orderIndex\",\"type\":\"uint256\"}],\"name\":\"cancelSwapOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiveToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_collateralDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_triggerPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_triggerAboveThreshold\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_minOut\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withdrawETH\",\"type\":\"bool\"}],\"name\":\"createDecreaseOrder\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_path\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isLong\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_triggerPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_triggerAboveThreshold\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_executionFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_shouldWrap\",\"type\":\"bool\"}],\"name\":\"createIncreaseOrder\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_path\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_triggerRatio\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_triggerAboveThreshold\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_executionFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_shouldWrap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_shouldUnwrap\",\"type\":\"bool\"}],\"name\":\"createSwapOrder\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"decreaseOrders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiveToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateralDelta\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"triggerPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"triggerAboveThreshold\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"minOut\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"withdrawETH\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"executionFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"decreaseOrdersIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_orderIndex\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_feeReceiver\",\"type\":\"address\"}],\"name\":\"executeDecreaseOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_orderIndex\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_feeReceiver\",\"type\":\"address\"}],\"name\":\"executeIncreaseOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_orderIndex\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_feeReceiver\",\"type\":\"address\"}],\"name\":\"executeSwapOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_orderIndex\",\"type\":\"uint256\"}],\"name\":\"getDecreaseOrder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateralDelta\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"triggerPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"triggerAboveThreshold\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"executionFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_orderIndex\",\"type\":\"uint256\"}],\"name\":\"getDecreaseOrderV2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiveToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateralDelta\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"triggerPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"triggerAboveThreshold\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"executionFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_orderIndex\",\"type\":\"uint256\"}],\"name\":\"getIncreaseOrder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"purchaseToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"purchaseTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"triggerPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"triggerAboveThreshold\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"executionFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"enum OrderType\",\"name\":\"_type\",\"type\":\"uint8\"}],\"name\":\"getOrderKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_returnFirst\",\"type\":\"bool\"}],\"name\":\"getShouldExecuteOrderList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint160[]\",\"name\":\"\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_orderIndex\",\"type\":\"uint256\"}],\"name\":\"getSwapOrder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"path0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"path1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"path2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"triggerRatio\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"triggerAboveThreshold\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldUnwrap\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"executionFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gov\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"increaseOrders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"purchaseToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"purchaseTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"indexToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isLong\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"triggerPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"triggerAboveThreshold\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"executionFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"increaseOrdersIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_weth\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdq\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minExecutionFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minPurchaseTokenAmountUsd\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minExecutionFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minPurchaseTokenAmountUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"orderExecutor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"orderList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gov\",\"type\":\"address\"}],\"name\":\"setGov\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minExecutionFee\",\"type\":\"uint256\"}],\"name\":\"setMinExecutionFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minPurchaseTokenAmountUsd\",\"type\":\"uint256\"}],\"name\":\"setMinPurchaseTokenAmountUsd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_orderExecutor\",\"type\":\"address\"}],\"name\":\"setOrderExecutor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"swapOrders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"triggerRatio\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"triggerAboveThreshold\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shouldUnwrap\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"executionFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"swapOrdersIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_orderIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_collateralDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_triggerPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_triggerAboveThreshold\",\"type\":\"bool\"}],\"name\":\"updateDecreaseOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_orderIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_sizeDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_triggerPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_triggerAboveThreshold\",\"type\":\"bool\"}],\"name\":\"updateIncreaseOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_orderIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_triggerRatio\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_triggerAboveThreshold\",\"type\":\"bool\"}],\"name\":\"updateSwapOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdq\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_triggerAboveThreshold\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_triggerPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_indexToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_maximizePrice\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_raise\",\"type\":\"bool\"}],\"name\":\"validatePositionOrderPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_path\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_triggerRatio\",\"type\":\"uint256\"}],\"name\":\"validateSwapOrderPriceWithTriggerAboveThreshold\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/OrderBook.sol\":\"OrderBook\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/core/OrderBook.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.12;\\n\\nimport \\\"../libraries/math/SafeMath.sol\\\";\\nimport \\\"../libraries/token/IERC20.sol\\\";\\nimport \\\"../tokens/interfaces/IWETH.sol\\\";\\nimport \\\"../libraries/token/SafeERC20.sol\\\";\\nimport \\\"../libraries/utils/Address.sol\\\";\\nimport \\\"../libraries/utils/ReentrancyGuard.sol\\\";\\nimport \\\"../libraries/utils/IterableMapping.sol\\\";\\n\\nimport \\\"./interfaces/IRouter.sol\\\";\\nimport \\\"./interfaces/IVault.sol\\\";\\nimport \\\"./interfaces/IOrderBook.sol\\\";\\n\\n\\ncontract OrderBook is ReentrancyGuard, IOrderBook {\\n    using SafeMath for uint256;\\n    using SafeERC20 for IERC20;\\n    using Address for address payable;\\n\\n    uint256 public constant PRICE_PRECISION = 1e30;\\n    uint256 public constant USDQ_PRECISION = 1e18;\\n\\n\\n    itmap public orderList;\\n    // Apply library functions to the data type.\\n    using IterableMapping for itmap;\\n\\n\\n    struct IncreaseOrder {\\n        address account;\\n        address purchaseToken;\\n        uint256 purchaseTokenAmount;\\n        address collateralToken;\\n        address indexToken;\\n        uint256 sizeDelta;\\n        bool isLong;\\n        uint256 triggerPrice;\\n        bool triggerAboveThreshold;\\n        uint256 executionFee;\\n    }\\n    struct DecreaseOrder {\\n        address account;\\n        address collateralToken;\\n        address receiveToken;\\n        uint256 collateralDelta;\\n        address indexToken;\\n        uint256 sizeDelta;\\n        bool isLong;\\n        uint256 triggerPrice;\\n        bool triggerAboveThreshold;\\n        uint256 minOut;\\n        bool withdrawETH;\\n        uint256 executionFee;\\n    }\\n    struct SwapOrder {\\n        address account;\\n        address[] path;\\n        uint256 amountIn;\\n        uint256 minOut;\\n        uint256 triggerRatio;\\n        bool triggerAboveThreshold;\\n        bool shouldUnwrap;\\n        uint256 executionFee;\\n    }\\n\\n    mapping(address => mapping(uint256 => IncreaseOrder)) public increaseOrders;\\n    mapping(address => uint256) public increaseOrdersIndex;\\n    mapping(address => mapping(uint256 => DecreaseOrder)) public decreaseOrders;\\n    mapping(address => uint256) public decreaseOrdersIndex;\\n    mapping(address => mapping(uint256 => SwapOrder)) public swapOrders;\\n    mapping(address => uint256) public swapOrdersIndex;\\n\\n    address public gov;\\n    address public weth;\\n    address public usdq;\\n    address public router;\\n    address public vault;\\n    address public orderExecutor;\\n\\n\\n    uint256 public minExecutionFee;\\n    uint256 public minPurchaseTokenAmountUsd;\\n    bool public isInitialized = false;\\n\\n    event CreateIncreaseOrder(\\n        address indexed account,\\n        uint256 orderIndex,\\n        address purchaseToken,\\n        uint256 purchaseTokenAmount,\\n        address collateralToken,\\n        address indexToken,\\n        uint256 sizeDelta,\\n        bool isLong,\\n        uint256 triggerPrice,\\n        bool triggerAboveThreshold,\\n        uint256 executionFee\\n    );\\n    event CancelIncreaseOrder(\\n        address indexed account,\\n        uint256 orderIndex,\\n        address purchaseToken,\\n        uint256 purchaseTokenAmount,\\n        address collateralToken,\\n        address indexToken,\\n        uint256 sizeDelta,\\n        bool isLong,\\n        uint256 triggerPrice,\\n        bool triggerAboveThreshold,\\n        uint256 executionFee\\n    );\\n    event ExecuteIncreaseOrder(\\n        address indexed account,\\n        uint256 orderIndex,\\n        address purchaseToken,\\n        uint256 purchaseTokenAmount,\\n        address collateralToken,\\n        address indexToken,\\n        uint256 sizeDelta,\\n        bool isLong,\\n        uint256 triggerPrice,\\n        bool triggerAboveThreshold,\\n        uint256 executionFee,\\n        uint256 executionPrice\\n    );\\n    event UpdateIncreaseOrder(\\n        address indexed account,\\n        uint256 orderIndex,\\n        address collateralToken,\\n        address indexToken,\\n        bool isLong,\\n        uint256 sizeDelta,\\n        uint256 triggerPrice,\\n        bool triggerAboveThreshold\\n    );\\n    event CreateDecreaseOrder(\\n        address indexed account,\\n        uint256 orderIndex,\\n        address collateralToken,\\n        address receiveToken,\\n        uint256 collateralDelta,\\n        address indexToken,\\n        uint256 sizeDelta,\\n        bool isLong,\\n        uint256 triggerPrice,\\n        bool triggerAboveThreshold,\\n        uint256 executionFee\\n    );\\n\\n    event CancelDecreaseOrder(\\n        address indexed account,\\n        uint256 orderIndex,\\n        address collateralToken,\\n        uint256 collateralDelta,\\n        address indexToken,\\n        uint256 sizeDelta,\\n        bool isLong,\\n        uint256 triggerPrice,\\n        bool triggerAboveThreshold,\\n        uint256 executionFee\\n    );\\n    event ExecuteDecreaseOrder(\\n        address indexed account,\\n        uint256 orderIndex,\\n        address collateralToken,\\n        uint256 collateralDelta,\\n        address indexToken,\\n        uint256 sizeDelta,\\n        bool isLong,\\n        uint256 triggerPrice,\\n        bool triggerAboveThreshold,\\n        uint256 executionFee,\\n        uint256 executionPrice\\n    );\\n    event UpdateDecreaseOrder(\\n        address indexed account,\\n        uint256 orderIndex,\\n        address collateralToken,\\n        uint256 collateralDelta,\\n        address indexToken,\\n        uint256 sizeDelta,\\n        bool isLong,\\n        uint256 triggerPrice,\\n        bool triggerAboveThreshold\\n    );\\n    event CreateSwapOrder(\\n        address indexed account,\\n        uint256 orderIndex,\\n        address[] path,\\n        uint256 amountIn,\\n        uint256 minOut,\\n        uint256 triggerRatio,\\n        bool triggerAboveThreshold,\\n        bool shouldUnwrap,\\n        uint256 executionFee\\n    );\\n    event CancelSwapOrder(\\n        address indexed account,\\n        uint256 orderIndex,\\n        address[] path,\\n        uint256 amountIn,\\n        uint256 minOut,\\n        uint256 triggerRatio,\\n        bool triggerAboveThreshold,\\n        bool shouldUnwrap,\\n        uint256 executionFee\\n    );\\n    event UpdateSwapOrder(\\n        address indexed account,\\n        uint256 ordexIndex,\\n        address[] path,\\n        uint256 amountIn,\\n        uint256 minOut,\\n        uint256 triggerRatio,\\n        bool triggerAboveThreshold,\\n        bool shouldUnwrap,\\n        uint256 executionFee\\n    );\\n    event ExecuteSwapOrder(\\n        address indexed account,\\n        uint256 orderIndex,\\n        address[] path,\\n        uint256 amountIn,\\n        uint256 minOut,\\n        uint256 amountOut,\\n        uint256 triggerRatio,\\n        bool triggerAboveThreshold,\\n        bool shouldUnwrap,\\n        uint256 executionFee\\n    );\\n\\n    constructor() public {\\n        gov = msg.sender;\\n    }\\n\\n    function _onlyGov() private view {\\n        require(msg.sender == gov, \\\"OB: forbidden\\\");\\n    }\\n\\n    function _onlyOrderExecutor() private view {\\n        require(msg.sender == orderExecutor, \\\"OB: forbidden\\\");\\n    }\\n\\n    function initialize(\\n        address _router,\\n        address _vault,\\n        address _weth,\\n        address _usdq,\\n        uint256 _minExecutionFee,\\n        uint256 _minPurchaseTokenAmountUsd\\n    ) external {\\n        _onlyGov();\\n        require(!isInitialized, \\\"OB: error\\\");\\n        isInitialized = true;\\n\\n        router = _router;\\n        vault = _vault;\\n        weth = _weth;\\n        usdq = _usdq;\\n        minExecutionFee = _minExecutionFee;\\n        minPurchaseTokenAmountUsd = _minPurchaseTokenAmountUsd;\\n\\n    }\\n\\n    receive() external payable {\\n        require(msg.sender == weth, \\\"OB: invalid sender\\\");\\n    }\\n\\n    function setOrderExecutor(\\n        address _orderExecutor\\n    )external  {\\n        _onlyGov();\\n        orderExecutor = _orderExecutor;\\n\\n    }\\n\\n    function _addToOpenOrders(address _account, uint256 _index, OrderType _type) internal {\\n        uint256 orderKey = getOrderKey(_account,  _index,  _type);\\n        Orders memory order = Orders(\\n            _account,\\n            _index,\\n            _type\\n        );\\n        orderList.insert(orderKey,order);\\n    }\\n\\n    function _removeFromOpenOrders(address _account, uint256 _index, OrderType _type) internal {\\n        uint256 orderKey = getOrderKey(_account,  _index,  _type);\\n        orderList.remove(orderKey);\\n    }\\n\\n    function getOrderKey(address _account, uint256 _index, OrderType _type) public pure returns (uint256) {\\n        return uint256(keccak256(abi.encodePacked(_account, _index, _type)));\\n    }\\n\\n\\n    function setMinExecutionFee(uint256 _minExecutionFee) external  {\\n        _onlyGov();\\n        minExecutionFee = _minExecutionFee;\\n\\n    }\\n\\n    function setMinPurchaseTokenAmountUsd(uint256 _minPurchaseTokenAmountUsd) external  {\\n        _onlyGov();\\n        minPurchaseTokenAmountUsd = _minPurchaseTokenAmountUsd;\\n\\n    }\\n\\n    function setGov(address _gov) external  {\\n        _onlyGov();\\n        gov = _gov;\\n\\n    }\\n\\n    function getSwapOrder(address _account, uint256 _orderIndex)\\n        public\\n        view\\n        override\\n        returns (\\n            address path0,\\n            address path1,\\n            address path2,\\n            uint256 amountIn,\\n            uint256 minOut,\\n            uint256 triggerRatio,\\n            bool triggerAboveThreshold,\\n            bool shouldUnwrap,\\n            uint256 executionFee\\n        )\\n    {\\n        SwapOrder memory order = swapOrders[_account][_orderIndex];\\n        return (\\n            order.path.length > 0 ? order.path[0] : address(0),\\n            order.path.length > 1 ? order.path[1] : address(0),\\n            order.path.length > 2 ? order.path[2] : address(0),\\n            order.amountIn,\\n            order.minOut,\\n            order.triggerRatio,\\n            order.triggerAboveThreshold,\\n            order.shouldUnwrap,\\n            order.executionFee\\n        );\\n    }\\n\\n    function createSwapOrder(\\n        address[] memory _path,\\n        uint256 _amountIn,\\n        uint256 _minOut,\\n        uint256 _triggerRatio, // tokenB / tokenA\\n        bool _triggerAboveThreshold,\\n        uint256 _executionFee,\\n        bool _shouldWrap,\\n        bool _shouldUnwrap\\n    ) external payable nonReentrant {\\n        require(_path.length == 2 || _path.length == 3, \\\"OB: invalid _path.length\\\");\\n        require(_path[0] != _path[_path.length - 1], \\\"OB: invalid _path\\\");\\n        require(_path[0] != usdq && _path[_path.length - 1] != usdq, \\\"OB: invalid token\\\");\\n        require(_amountIn > 0, \\\"OB: invalid _amountIn\\\");\\n        require(_executionFee >= minExecutionFee, \\\"OB: insufficient execution fee\\\");\\n\\n        // always need this call because of mandatory executionFee user has to transfer in ETH\\n        _transferInETH();\\n\\n        if (_shouldWrap) {\\n            require(_path[0] == weth, \\\"OB: only weth could be wrapped\\\");\\n            require(msg.value == _executionFee.add(_amountIn), \\\"OB: incorrect value transferred\\\");\\n        } else {\\n            require(msg.value == _executionFee, \\\"OB: incorrect execution fee transferred\\\");\\n            IRouter(router).pluginTransfer(_path[0], msg.sender, address(this), _amountIn);\\n        }\\n\\n        _createSwapOrder(msg.sender, _path, _amountIn, _minOut, _triggerRatio, _triggerAboveThreshold, _shouldUnwrap, _executionFee);\\n    }\\n\\n    function _createSwapOrder(\\n        address _account,\\n        address[] memory _path,\\n        uint256 _amountIn,\\n        uint256 _minOut,\\n        uint256 _triggerRatio,\\n        bool _triggerAboveThreshold,\\n        bool _shouldUnwrap,\\n        uint256 _executionFee\\n    ) private {\\n        uint256 _orderIndex = swapOrdersIndex[_account];\\n        SwapOrder memory order = SwapOrder(_account, _path, _amountIn, _minOut, _triggerRatio, _triggerAboveThreshold, _shouldUnwrap, _executionFee);\\n        swapOrdersIndex[_account] = _orderIndex.add(1);\\n        swapOrders[_account][_orderIndex] = order;\\n        _addToOpenOrders(_account,_orderIndex,OrderType.SWAP); \\n\\n        emit CreateSwapOrder(_account, _orderIndex, _path, _amountIn, _minOut, _triggerRatio, _triggerAboveThreshold, _shouldUnwrap, _executionFee);\\n    }\\n\\n    function cancelMultiple(\\n        uint256[] memory _swapOrderIndexes,\\n        uint256[] memory _increaseOrderIndexes,\\n        uint256[] memory _decreaseOrderIndexes\\n    ) external {\\n        for (uint256 i = 0; i < _swapOrderIndexes.length; i++) {\\n            cancelSwapOrder(_swapOrderIndexes[i]);\\n        }\\n        for (uint256 i = 0; i < _increaseOrderIndexes.length; i++) {\\n            cancelIncreaseOrder(_increaseOrderIndexes[i]);\\n        }\\n        for (uint256 i = 0; i < _decreaseOrderIndexes.length; i++) {\\n            cancelDecreaseOrder(_decreaseOrderIndexes[i]);\\n        }\\n    }\\n\\n    function cancelSwapOrder(uint256 _orderIndex) public nonReentrant {\\n        SwapOrder memory order = swapOrders[msg.sender][_orderIndex];\\n        require(order.account != address(0), \\\"OB: non-existent order\\\");\\n\\n        delete swapOrders[msg.sender][_orderIndex];\\n        _removeFromOpenOrders(msg.sender,_orderIndex,OrderType.SWAP); \\n\\n        if (order.path[0] == weth) {\\n            _transferOutETH(order.executionFee.add(order.amountIn), msg.sender);\\n        } else {\\n            IERC20(order.path[0]).safeTransfer(msg.sender, order.amountIn);\\n            _transferOutETH(order.executionFee, msg.sender);\\n        }\\n\\n        emit CancelSwapOrder(\\n            msg.sender,\\n            _orderIndex,\\n            order.path,\\n            order.amountIn,\\n            order.minOut,\\n            order.triggerRatio,\\n            order.triggerAboveThreshold,\\n            order.shouldUnwrap,\\n            order.executionFee\\n        );\\n    }\\n\\n    function validateSwapOrderPriceWithTriggerAboveThreshold(address[] memory _path, uint256 _triggerRatio) public view returns (bool) {\\n        require(_path.length == 2 || _path.length == 3, \\\"OB: invalid _path.length\\\");\\n\\n        // limit orders don't need this validation because minOut is enough\\n        // so this validation handles scenarios for stop orders only\\n        // when a user wants to swap when a price of tokenB increases relative to tokenA\\n        address tokenA = _path[0];\\n        address tokenB = _path[_path.length - 1];\\n        uint256 tokenAPrice;\\n        uint256 tokenBPrice;\\n\\n        tokenAPrice = IVault(vault).getMinPrice(tokenA);\\n        tokenBPrice = IVault(vault).getMaxPrice(tokenB);\\n\\n        uint256 currentRatio = tokenBPrice.mul(PRICE_PRECISION).div(tokenAPrice);\\n\\n        bool isValid = currentRatio > _triggerRatio;\\n        return isValid;\\n    }\\n\\n    function updateSwapOrder(\\n        uint256 _orderIndex,\\n        uint256 _minOut,\\n        uint256 _triggerRatio,\\n        bool _triggerAboveThreshold\\n    ) external nonReentrant {\\n        SwapOrder storage order = swapOrders[msg.sender][_orderIndex];\\n        require(order.account != address(0), \\\"OB: non-existent order\\\");\\n\\n        order.minOut = _minOut;\\n        order.triggerRatio = _triggerRatio;\\n        order.triggerAboveThreshold = _triggerAboveThreshold;\\n\\n        emit UpdateSwapOrder(msg.sender, _orderIndex, order.path, order.amountIn, _minOut, _triggerRatio, _triggerAboveThreshold, order.shouldUnwrap, order.executionFee);\\n    }\\n\\n    function executeSwapOrder(\\n        address _account,\\n        uint256 _orderIndex,\\n        address payable _feeReceiver\\n    ) external override nonReentrant {\\n        _onlyOrderExecutor();\\n        SwapOrder memory order = swapOrders[_account][_orderIndex];\\n        require(order.account != address(0), \\\"OB: non-existent order\\\");\\n\\n        if (order.triggerAboveThreshold) {\\n            // gas optimisation\\n            // order.minAmount should prevent wrong price execution in case of simple limit order\\n            require(validateSwapOrderPriceWithTriggerAboveThreshold(order.path, order.triggerRatio), \\\"OB: invalid price for execution\\\");\\n        }\\n\\n        delete swapOrders[_account][_orderIndex];\\n        _removeFromOpenOrders(_account,_orderIndex,OrderType.SWAP);\\n\\n        IERC20(order.path[0]).safeTransfer(vault, order.amountIn);\\n\\n        uint256 _amountOut;\\n        if (order.path[order.path.length - 1] == weth && order.shouldUnwrap) {\\n            _amountOut = _swap(order.path, order.minOut, address(this));\\n            _transferOutETH(_amountOut, payable(order.account));\\n        } else {\\n            _amountOut = _swap(order.path, order.minOut, order.account);\\n        }\\n\\n        // pay executor\\n        _transferOutETH(order.executionFee, _feeReceiver);\\n\\n        emit ExecuteSwapOrder(\\n            _account,\\n            _orderIndex,\\n            order.path,\\n            order.amountIn,\\n            order.minOut,\\n            _amountOut,\\n            order.triggerRatio,\\n            order.triggerAboveThreshold,\\n            order.shouldUnwrap,\\n            order.executionFee\\n        );\\n    }\\n\\n    function validatePositionOrderPrice(\\n        bool _triggerAboveThreshold,\\n        uint256 _triggerPrice,\\n        address _indexToken,\\n        bool _maximizePrice,\\n        bool _raise\\n    ) public view returns (uint256, bool) {\\n        uint256 currentPrice = _maximizePrice ? IVault(vault).getMaxPrice(_indexToken) : IVault(vault).getMinPrice(_indexToken);\\n        bool isPriceValid = _triggerAboveThreshold ? currentPrice > _triggerPrice : currentPrice < _triggerPrice;\\n        if (_raise) {\\n            require(isPriceValid, \\\"OB: invalid price for execution\\\");\\n        }\\n        return (currentPrice, isPriceValid);\\n    }\\n\\n    function getDecreaseOrder(address _account, uint256 _orderIndex)\\n        public\\n        view\\n        override\\n        returns (\\n            address collateralToken,\\n            uint256 collateralDelta,\\n            address indexToken,\\n            uint256 sizeDelta,\\n            bool isLong,\\n            uint256 triggerPrice,\\n            bool triggerAboveThreshold,\\n            uint256 executionFee\\n        )\\n    {\\n        DecreaseOrder memory order = decreaseOrders[_account][_orderIndex];\\n        return (order.collateralToken, order.collateralDelta, order.indexToken, order.sizeDelta, order.isLong, order.triggerPrice, order.triggerAboveThreshold, order.executionFee);\\n    }\\n\\n    function getDecreaseOrderV2(address _account, uint256 _orderIndex)\\n        public\\n        view\\n        returns (\\n            address collateralToken,\\n            address receiveToken,\\n            uint256 collateralDelta,\\n            address indexToken,\\n            uint256 sizeDelta,\\n            bool isLong,\\n            uint256 triggerPrice,\\n            bool triggerAboveThreshold,\\n            uint256 executionFee\\n        )\\n    {\\n        DecreaseOrder memory order = decreaseOrders[_account][_orderIndex];\\n        return (order.collateralToken, order.receiveToken, order.collateralDelta, order.indexToken, order.sizeDelta, order.isLong, order.triggerPrice, order.triggerAboveThreshold, order.executionFee);\\n    }\\n\\n    function getIncreaseOrder(address _account, uint256 _orderIndex)\\n        public\\n        view\\n        override\\n        returns (\\n            address purchaseToken,\\n            uint256 purchaseTokenAmount,\\n            address collateralToken,\\n            address indexToken,\\n            uint256 sizeDelta,\\n            bool isLong,\\n            uint256 triggerPrice,\\n            bool triggerAboveThreshold,\\n            uint256 executionFee\\n        )\\n    {\\n        IncreaseOrder memory order = increaseOrders[_account][_orderIndex];\\n        return (\\n            order.purchaseToken,\\n            order.purchaseTokenAmount,\\n            order.collateralToken,\\n            order.indexToken,\\n            order.sizeDelta,\\n            order.isLong,\\n            order.triggerPrice,\\n            order.triggerAboveThreshold,\\n            order.executionFee\\n        );\\n    }\\n\\n    function createIncreaseOrder(\\n        address[] memory _path,\\n        uint256 _amountIn,\\n        address _indexToken,\\n        uint256 _minOut,\\n        uint256 _sizeDelta,\\n        address _collateralToken,\\n        bool _isLong,\\n        uint256 _triggerPrice,\\n        bool _triggerAboveThreshold,\\n        uint256 _executionFee,\\n        bool _shouldWrap\\n    ) external payable nonReentrant {\\n        // always need this call because of mandatory executionFee user has to transfer in ETH\\n        _transferInETH();\\n\\n        require(_executionFee >= minExecutionFee, \\\"OB: insufficient execution fee\\\");\\n        if (_shouldWrap) {\\n            require(_path[0] == weth, \\\"OB: only weth could be wrapped\\\");\\n            require(msg.value == _executionFee.add(_amountIn), \\\"OB: incorrect value transferred\\\");\\n        } else {\\n            require(msg.value == _executionFee, \\\"OB: incorrect execution fee transferred\\\");\\n            IRouter(router).pluginTransfer(_path[0], msg.sender, address(this), _amountIn);\\n        }\\n\\n        address _purchaseToken = _path[_path.length - 1];\\n        uint256 _purchaseTokenAmount;\\n        if (_path.length > 1) {\\n            require(_path[0] != _purchaseToken, \\\"OB: invalid _path\\\");\\n            IERC20(_path[0]).safeTransfer(vault, _amountIn);\\n            _purchaseTokenAmount = _swap(_path, _minOut, address(this));\\n        } else {\\n            _purchaseTokenAmount = _amountIn;\\n        }\\n\\n        {\\n            uint256 _purchaseTokenAmountUsd = IVault(vault).tokenToUsdMin(_purchaseToken, _purchaseTokenAmount);\\n            require(_purchaseTokenAmountUsd >= minPurchaseTokenAmountUsd, \\\"OB: insufficient collateral\\\");\\n        }\\n\\n        _createIncreaseOrder(\\n            msg.sender,\\n            _purchaseToken,\\n            _purchaseTokenAmount,\\n            _collateralToken,\\n            _indexToken,\\n            _sizeDelta,\\n            _isLong,\\n            _triggerPrice,\\n            _triggerAboveThreshold,\\n            _executionFee\\n        );\\n    }\\n\\n    function _createIncreaseOrder(\\n        address _account,\\n        address _purchaseToken,\\n        uint256 _purchaseTokenAmount,\\n        address _collateralToken,\\n        address _indexToken,\\n        uint256 _sizeDelta,\\n        bool _isLong,\\n        uint256 _triggerPrice,\\n        bool _triggerAboveThreshold,\\n        uint256 _executionFee\\n    ) private {\\n        uint256 _orderIndex = increaseOrdersIndex[_account];\\n        IncreaseOrder memory order = IncreaseOrder(\\n            _account,\\n            _purchaseToken,\\n            _purchaseTokenAmount,\\n            _collateralToken,\\n            _indexToken,\\n            _sizeDelta,\\n            _isLong,\\n            _triggerPrice,\\n            _triggerAboveThreshold,\\n            _executionFee\\n        );\\n        increaseOrdersIndex[_account] = _orderIndex.add(1);\\n        increaseOrders[_account][_orderIndex] = order;\\n        _addToOpenOrders(_account,_orderIndex,OrderType.INCREASE);\\n            emit CreateIncreaseOrder(\\n                _account,\\n                _orderIndex,\\n                _purchaseToken,\\n                _purchaseTokenAmount,\\n                _collateralToken,\\n                _indexToken,\\n                _sizeDelta,\\n                _isLong,\\n                _triggerPrice,\\n                _triggerAboveThreshold,\\n                _executionFee\\n            );\\n    }\\n\\n    function updateIncreaseOrder(\\n        uint256 _orderIndex,\\n        uint256 _sizeDelta,\\n        uint256 _triggerPrice,\\n        bool _triggerAboveThreshold\\n    ) external nonReentrant {\\n        IncreaseOrder storage order = increaseOrders[msg.sender][_orderIndex];\\n        require(order.account != address(0), \\\"OB: non-existent order\\\");\\n\\n        order.triggerPrice = _triggerPrice;\\n        order.triggerAboveThreshold = _triggerAboveThreshold;\\n        order.sizeDelta = _sizeDelta;\\n\\n        emit UpdateIncreaseOrder(msg.sender, _orderIndex, order.collateralToken, order.indexToken, order.isLong, _sizeDelta, _triggerPrice, _triggerAboveThreshold);\\n    }\\n\\n    function cancelIncreaseOrder(uint256 _orderIndex) public nonReentrant {\\n        IncreaseOrder memory order = increaseOrders[msg.sender][_orderIndex];\\n        require(order.account != address(0), \\\"OB: non-existent order\\\");\\n\\n        delete increaseOrders[msg.sender][_orderIndex];\\n        _removeFromOpenOrders(msg.sender,_orderIndex,OrderType.INCREASE);\\n\\n        if (order.purchaseToken == weth) {\\n            _transferOutETH(order.executionFee.add(order.purchaseTokenAmount), msg.sender);\\n        } else {\\n            IERC20(order.purchaseToken).safeTransfer(msg.sender, order.purchaseTokenAmount);\\n            _transferOutETH(order.executionFee, msg.sender);\\n        }\\n\\n        emit CancelIncreaseOrder(\\n            order.account,\\n            _orderIndex,\\n            order.purchaseToken,\\n            order.purchaseTokenAmount,\\n            order.collateralToken,\\n            order.indexToken,\\n            order.sizeDelta,\\n            order.isLong,\\n            order.triggerPrice,\\n            order.triggerAboveThreshold,\\n            order.executionFee\\n        );\\n    }\\n\\n    function executeIncreaseOrder(\\n        address _address,\\n        uint256 _orderIndex,\\n        address payable _feeReceiver\\n    ) external override nonReentrant {\\n        _onlyOrderExecutor();\\n        IncreaseOrder memory order = increaseOrders[_address][_orderIndex];\\n        require(order.account != address(0), \\\"OB: non-existent order\\\");\\n\\n        // increase long should use max price\\n        // increase short should use min price\\n        (uint256 currentPrice, ) = validatePositionOrderPrice(order.triggerAboveThreshold, order.triggerPrice, order.indexToken, order.isLong, true);\\n\\n        delete increaseOrders[_address][_orderIndex];\\n        _removeFromOpenOrders(_address,_orderIndex,OrderType.INCREASE);\\n\\n        IERC20(order.purchaseToken).safeTransfer(vault, order.purchaseTokenAmount);\\n\\n        if (order.purchaseToken != order.collateralToken) {\\n            address[] memory path = new address[](2);\\n            path[0] = order.purchaseToken;\\n            path[1] = order.collateralToken;\\n\\n            uint256 amountOut = _swap(path, 0, address(this));\\n            IERC20(order.collateralToken).safeTransfer(vault, amountOut);\\n        }\\n\\n        IRouter(router).pluginIncreasePosition(order.account, order.collateralToken, order.indexToken, order.sizeDelta, order.isLong);\\n\\n        // pay executor\\n        _transferOutETH(order.executionFee, _feeReceiver);\\n\\n        emit ExecuteIncreaseOrder(\\n            order.account,\\n            _orderIndex,\\n            order.purchaseToken,\\n            order.purchaseTokenAmount,\\n            order.collateralToken,\\n            order.indexToken,\\n            order.sizeDelta,\\n            order.isLong,\\n            order.triggerPrice,\\n            order.triggerAboveThreshold,\\n            order.executionFee,\\n            currentPrice\\n        );\\n    }\\n\\n    function createDecreaseOrder(\\n        address _indexToken,\\n        uint256 _sizeDelta,\\n        address _collateralToken,\\n        address _receiveToken,\\n        uint256 _collateralDelta,\\n        bool _isLong,\\n        uint256 _triggerPrice,\\n        bool _triggerAboveThreshold,\\n        uint256 _minOut,\\n        bool _withdrawETH\\n    ) external payable nonReentrant {\\n\\n        _transferInETH();\\n        \\n        require(msg.value > minExecutionFee, \\\"OB: insufficient execution fee\\\");\\n        if (_withdrawETH) {\\n            require(_receiveToken == weth, \\\"OB: invalid _receiveToken\\\");\\n        }\\n\\n        \\n\\n        _createDecreaseOrder(msg.sender, _collateralToken,_receiveToken, _collateralDelta, _indexToken, _sizeDelta, _isLong, _triggerPrice, _triggerAboveThreshold, _minOut, _withdrawETH);\\n    }\\n\\n    function _createDecreaseOrder(\\n        address _account,\\n        address _collateralToken,\\n        address _receiveToken,\\n        uint256 _collateralDelta,\\n        address _indexToken,\\n        uint256 _sizeDelta,\\n        bool _isLong,\\n        uint256 _triggerPrice,\\n        bool _triggerAboveThreshold,\\n        uint256 _minOut,\\n        bool _withdrawETH\\n    ) private {\\n        uint256 _orderIndex = decreaseOrdersIndex[_account];\\n        DecreaseOrder memory order = DecreaseOrder(\\n            _account,\\n            _collateralToken,\\n            _receiveToken,\\n            _collateralDelta,\\n            _indexToken,\\n            _sizeDelta,\\n            _isLong,\\n            _triggerPrice,\\n            _triggerAboveThreshold,\\n            _minOut,\\n            _withdrawETH,\\n            msg.value\\n        );\\n        decreaseOrdersIndex[_account] = _orderIndex.add(1);\\n        decreaseOrders[_account][_orderIndex] = order;\\n        _addToOpenOrders(_account,_orderIndex,OrderType.DECREASE);\\n\\n        emit CreateDecreaseOrder(_account, _orderIndex, _collateralToken, _receiveToken, _collateralDelta, _indexToken, _sizeDelta, _isLong, _triggerPrice, _triggerAboveThreshold, msg.value);\\n\\n    }\\n\\n    function executeDecreaseOrder(\\n        address _address,\\n        uint256 _orderIndex,\\n        address payable _feeReceiver\\n    ) external override nonReentrant {\\n        _onlyOrderExecutor();\\n        DecreaseOrder memory order = decreaseOrders[_address][_orderIndex];\\n        require(order.account != address(0), \\\"OB: non-existent order\\\");\\n\\n        // decrease long should use min price\\n        // decrease short should use max price\\n        (uint256 currentPrice, ) = validatePositionOrderPrice(order.triggerAboveThreshold, order.triggerPrice, order.indexToken, !order.isLong, true);\\n\\n        delete decreaseOrders[_address][_orderIndex];\\n        _removeFromOpenOrders(_address,_orderIndex,OrderType.DECREASE);\\n\\n        uint256 amountOut = IRouter(router).pluginDecreasePosition(\\n            order.account,\\n            order.collateralToken,\\n            order.indexToken,\\n            order.collateralDelta,\\n            order.sizeDelta,\\n            order.isLong,\\n            address(this)\\n        );\\n\\n        if (order.receiveToken != address(0)) {\\n            IERC20(order.collateralToken).safeTransfer(vault, amountOut);\\n            amountOut = _vaultSwap(order.collateralToken, order.receiveToken, order.minOut, address(this));\\n        }\\n\\n        if (order.withdrawETH) {\\n            _transferOutETHWithGasLimit(amountOut, payable(order.account));\\n        } else {\\n            IERC20(order.receiveToken).safeTransfer(order.account, amountOut);\\n        }\\n\\n        _transferOutETH(order.executionFee, _feeReceiver);\\n\\n        emit ExecuteDecreaseOrder(\\n            order.account,\\n            _orderIndex,\\n            order.collateralToken,\\n            order.collateralDelta,\\n            order.indexToken,\\n            order.sizeDelta,\\n            order.isLong,\\n            order.triggerPrice,\\n            order.triggerAboveThreshold,\\n            order.executionFee,\\n            currentPrice\\n        );\\n    }\\n\\n    function cancelDecreaseOrder(uint256 _orderIndex) public nonReentrant {\\n        DecreaseOrder memory order = decreaseOrders[msg.sender][_orderIndex];\\n        require(order.account != address(0), \\\"OB: non-existent order\\\");\\n\\n        delete decreaseOrders[msg.sender][_orderIndex];\\n        _removeFromOpenOrders(msg.sender,_orderIndex,OrderType.DECREASE);\\n        _transferOutETH(order.executionFee, msg.sender);\\n\\n        emit CancelDecreaseOrder(\\n            order.account,\\n            _orderIndex,\\n            order.collateralToken,\\n            order.collateralDelta,\\n            order.indexToken,\\n            order.sizeDelta,\\n            order.isLong,\\n            order.triggerPrice,\\n            order.triggerAboveThreshold,\\n            order.executionFee\\n        );\\n    }\\n\\n    function updateDecreaseOrder(\\n        uint256 _orderIndex,\\n        uint256 _collateralDelta,\\n        uint256 _sizeDelta,\\n        uint256 _triggerPrice,\\n        bool _triggerAboveThreshold\\n    ) external nonReentrant {\\n        DecreaseOrder storage order = decreaseOrders[msg.sender][_orderIndex];\\n        require(order.account != address(0), \\\"OB: non-existent order\\\");\\n\\n        order.triggerPrice = _triggerPrice;\\n        order.triggerAboveThreshold = _triggerAboveThreshold;\\n        order.sizeDelta = _sizeDelta;\\n        order.collateralDelta = _collateralDelta;\\n\\n        emit UpdateDecreaseOrder(\\n            msg.sender,\\n            _orderIndex,\\n            order.collateralToken,\\n            _collateralDelta,\\n            order.indexToken,\\n            _sizeDelta,\\n            order.isLong,\\n            _triggerPrice,\\n            _triggerAboveThreshold\\n        );\\n    }\\n\\n    function _transferInETH() private {\\n        if (msg.value != 0) {\\n            IWETH(weth).deposit{value: msg.value}();\\n        }\\n    }\\n\\n    function _transferOutETH(uint256 _amountOut, address payable _receiver) private {\\n        IWETH(weth).withdraw(_amountOut);\\n        _receiver.sendValue(_amountOut);\\n    }\\n    function _transferOutETHWithGasLimit(uint256 _amountOut, address payable _receiver) internal {\\n        IWETH(weth).withdraw(_amountOut);\\n        _receiver.transfer(_amountOut);\\n    }\\n\\n    function _swap(\\n        address[] memory _path,\\n        uint256 _minOut,\\n        address _receiver\\n    ) private returns (uint256) {\\n        if (_path.length == 2) {\\n            return _vaultSwap(_path[0], _path[1], _minOut, _receiver);\\n        }\\n        if (_path.length == 3) {\\n            uint256 midOut = _vaultSwap(_path[0], _path[1], 0, address(this));\\n            IERC20(_path[1]).safeTransfer(vault, midOut);\\n            return _vaultSwap(_path[1], _path[2], _minOut, _receiver);\\n        }\\n\\n        revert(\\\"OB: invalid _path.length\\\");\\n    }\\n\\n    function _vaultSwap(\\n        address _tokenIn,\\n        address _tokenOut,\\n        uint256 _minOut,\\n        address _receiver\\n    ) private returns (uint256) {\\n        uint256 amountOut;\\n\\n        // if (_tokenOut == usdq) {\\n        //     // buyUSDQ\\n        //     amountOut = IVault(vault).buyUSDQ(_tokenIn, _receiver);\\n        // } else if (_tokenIn == usdq) {\\n        //     // sellUSDQ\\n        //     amountOut = IVault(vault).sellUSDQ(_tokenOut, _receiver);\\n        // } else {\\n            // swap\\n            amountOut = IVault(vault).swap(_tokenIn, _tokenOut, _receiver);\\n        // }\\n\\n        require(amountOut >= _minOut, \\\"OB: insufficient amountOut\\\");\\n        return amountOut;\\n    }\\n\\n   function getShouldExecuteOrderList(bool _returnFirst\\n    ) external override view returns (bool ,uint160[] memory) {\\n        // if(!chainlinkOrderExecutionActive){\\n        //     return(false,new uint160[](0));\\n        // }\\n\\n        uint256 orderListSize = orderList.size;\\n        uint160[] memory shouldExecuteOrders = new uint160[](orderListSize*3);\\n        uint256 shouldExecuteIndex = 0;\\n\\n        if(orderListSize>0){\\n\\n            for (\\n                uint i = orderList.iterate_start();\\n                orderList.iterate_valid(i);\\n                i = orderList.iterate_next(i)\\n            ) {\\n                (, Orders memory order) = orderList.iterate_get(i);\\n                bool shouldExecute =false;\\n\\n                if (order.orderType == OrderType.SWAP){\\n                    SwapOrder memory swapOrder = swapOrders[order.account][order.orderIndex];\\n                    shouldExecute = !validateSwapOrderPriceWithTriggerAboveThreshold(swapOrder.path, swapOrder.triggerRatio);\\n                }\\n                else if (order.orderType == OrderType.INCREASE){\\n                    IncreaseOrder memory increaseOrder = increaseOrders[order.account][order.orderIndex];\\n                    (, shouldExecute ) = validatePositionOrderPrice(increaseOrder.triggerAboveThreshold, increaseOrder.triggerPrice, increaseOrder.indexToken, increaseOrder.isLong, false);\\n                }else if (order.orderType == OrderType.DECREASE){\\n                    DecreaseOrder memory decreaseOrder = decreaseOrders[order.account][order.orderIndex];\\n                    (uint256 size, , , , , , , ) = IVault(vault).getPosition(decreaseOrder.account, decreaseOrder.collateralToken, decreaseOrder.indexToken, decreaseOrder.isLong);\\n                    if(size>0){\\n                        (, shouldExecute ) = validatePositionOrderPrice(decreaseOrder.triggerAboveThreshold, decreaseOrder.triggerPrice, decreaseOrder.indexToken, !decreaseOrder.isLong, false);\\n                    }    \\n                }\\n                if (shouldExecute){\\n                    if(_returnFirst){\\n                        return(true,new uint160[](0));\\n                    }\\n                    shouldExecuteOrders[shouldExecuteIndex*3] = uint160(order.account);\\n                    shouldExecuteOrders[shouldExecuteIndex*3+1] = uint160(order.orderIndex);\\n                    shouldExecuteOrders[shouldExecuteIndex*3+2] = uint160(order.orderType);\\n                    shouldExecuteIndex++;\\n                }                \\n            }\\n        }\\n\\n        uint160[] memory returnList = new uint160[](shouldExecuteIndex*3); \\n\\n        for (uint256 i = 0; i < shouldExecuteIndex*3; i++) {\\n            returnList[i]=shouldExecuteOrders[i];\\n        }\\n        \\n        return (shouldExecuteIndex>0,returnList);\\n    }\\n\\n\\n}\\n\",\"keccak256\":\"0xfd8605a5a77f5ad84651fd899378fdfd4ece88551ec82dbd367090684b6d20a0\",\"license\":\"MIT\"},\"contracts/core/interfaces/IOrderBook.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.12 <0.9.0;\\n\\ninterface IOrderBook {\\n    function getSwapOrder(address _account, uint256 _orderIndex)\\n        external\\n        view\\n        returns (\\n            address path0,\\n            address path1,\\n            address path2,\\n            uint256 amountIn,\\n            uint256 minOut,\\n            uint256 triggerRatio,\\n            bool triggerAboveThreshold,\\n            bool shouldUnwrap,\\n            uint256 executionFee\\n        );\\n\\n    function getIncreaseOrder(address _account, uint256 _orderIndex)\\n        external\\n        view\\n        returns (\\n            address purchaseToken,\\n            uint256 purchaseTokenAmount,\\n            address collateralToken,\\n            address indexToken,\\n            uint256 sizeDelta,\\n            bool isLong,\\n            uint256 triggerPrice,\\n            bool triggerAboveThreshold,\\n            uint256 executionFee\\n        );\\n\\n    function getDecreaseOrder(address _account, uint256 _orderIndex)\\n        external\\n        view\\n        returns (\\n            address collateralToken,\\n            uint256 collateralDelta,\\n            address indexToken,\\n            uint256 sizeDelta,\\n            bool isLong,\\n            uint256 triggerPrice,\\n            bool triggerAboveThreshold,\\n            uint256 executionFee\\n        );\\n\\n    function executeSwapOrder(\\n        address,\\n        uint256,\\n        address payable\\n    ) external;\\n\\n    function executeDecreaseOrder(\\n        address,\\n        uint256,\\n        address payable\\n    ) external;\\n\\n    function executeIncreaseOrder(\\n        address,\\n        uint256,\\n        address payable\\n    ) external;\\n\\n    function getShouldExecuteOrderList(\\n        bool _returnFirst\\n    ) external view returns (\\n            bool ,\\n            uint160[] memory); \\n\\n\\n}\\n\",\"keccak256\":\"0xb1bffce77ff9bc78579795597f50152a1cb48a4f8d81232b5ebe0726fea97bbc\",\"license\":\"MIT\"},\"contracts/core/interfaces/IRouter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IRouter {\\n    function addPlugin(address _plugin) external;\\n\\n    function pluginTransfer(\\n        address _token,\\n        address _account,\\n        address _receiver,\\n        uint256 _amount\\n    ) external;\\n\\n    function pluginIncreasePosition(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        uint256 _sizeDelta,\\n        bool _isLong\\n    ) external;\\n\\n    function pluginDecreasePosition(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        uint256 _collateralDelta,\\n        uint256 _sizeDelta,\\n        bool _isLong,\\n        address _receiver\\n    ) external returns (uint256);\\n\\n    function swap(\\n        address[] memory _path,\\n        uint256 _amountIn,\\n        uint256 _minOut,\\n        address _receiver\\n    ) external;\\n}\\n\",\"keccak256\":\"0x587948a9395b2f9052ab3680124b594504ed899941ea9fa5ea5cb59f33ec89ed\",\"license\":\"MIT\"},\"contracts/core/interfaces/IVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"./IVaultUtils.sol\\\";\\n\\ninterface IVault {\\n    function isInitialized() external view returns (bool);\\n\\n    function isSwapEnabled() external view returns (bool);\\n\\n    function isLeverageEnabled() external view returns (bool);\\n\\n    function setVaultUtils(IVaultUtils _vaultUtils) external;\\n\\n    function setError(uint256 _errorCode, string calldata _error) external;\\n\\n    function router() external view returns (address);\\n\\n    function usdq() external view returns (address);\\n\\n    function gov() external view returns (address);\\n\\n    function whitelistedTokenCount() external view returns (uint256);\\n\\n    function maxLeverage() external view returns (uint256);\\n\\n    function minProfitTime() external view returns (uint256);\\n\\n    function hasDynamicFees() external view returns (bool);\\n\\n    function fundingInterval() external view returns (uint256);\\n\\n    function totalTokenWeights() external view returns (uint256);\\n\\n    function getTargetUsdqAmount(address _token) external view returns (uint256);\\n\\n    function inManagerMode() external view returns (bool);\\n\\n    function inPrivateLiquidationMode() external view returns (bool);\\n\\n    function maxGasPrice() external view returns (uint256);\\n\\n    function approvedRouters(address _account, address _router) external view returns (bool);\\n\\n    function isLiquidator(address _account) external view returns (bool);\\n\\n    function isManager(address _account) external view returns (bool);\\n\\n    function minProfitBasisPoints(address _token) external view returns (uint256);\\n\\n    function tokenBalances(address _token) external view returns (uint256);\\n\\n    function lastFundingTimes(address _token) external view returns (uint256);\\n\\n    function setMaxLeverage(uint256 _maxLeverage) external;\\n\\n    function setInManagerMode(bool _inManagerMode) external;\\n\\n    function setManager(address _manager, bool _isManager) external;\\n\\n    function setIsSwapEnabled(bool _isSwapEnabled) external;\\n\\n    function setIsLeverageEnabled(bool _isLeverageEnabled) external;\\n\\n    function setMaxGasPrice(uint256 _maxGasPrice) external;\\n\\n    function setUsdqAmount(address _token, uint256 _amount) external;\\n\\n    function setBufferAmount(address _token, uint256 _amount) external;\\n\\n    function setMaxGlobalShortSize(address _token, uint256 _amount) external;\\n\\n    function setInPrivateLiquidationMode(bool _inPrivateLiquidationMode) external;\\n\\n    function setLiquidator(address _liquidator, bool _isActive) external;\\n\\n    function setFundingRate(\\n        uint256 _fundingInterval,\\n        uint256 _fundingRateFactor,\\n        uint256 _stableFundingRateFactor\\n    ) external;\\n\\n    function setFees(\\n        uint256 _taxBasisPoints,\\n        uint256 _stableTaxBasisPoints,\\n        uint256 _mintBurnFeeBasisPoints,\\n        uint256 _swapFeeBasisPoints,\\n        uint256 _stableSwapFeeBasisPoints,\\n        uint256 _marginFeeBasisPoints,\\n        uint256 _liquidationFeeUsd,\\n        uint256 _minProfitTime,\\n        bool _hasDynamicFees\\n    ) external;\\n\\n    function setTokenConfig(\\n        address _token,\\n        uint256 _tokenDecimals,\\n        uint256 _redemptionBps,\\n        uint256 _minProfitBps,\\n        uint256 _maxUsdqAmount,\\n        bool _isStable,\\n        bool _isShortable\\n    ) external;\\n\\n    function setPriceFeed(address _priceFeed) external;\\n\\n    function withdrawFees(address _token, address _receiver) external returns (uint256);\\n\\n    function directPoolDeposit(address _token) external;\\n\\n    function buyUSDQ(address _token, address _receiver) external returns (uint256);\\n\\n    function sellUSDQ(address _token, address _receiver) external returns (uint256);\\n\\n    function swap(\\n        address _tokenIn,\\n        address _tokenOut,\\n        address _receiver\\n    ) external returns (uint256);\\n\\n    function increasePosition(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        uint256 _sizeDelta,\\n        bool _isLong\\n    ) external;\\n\\n    function decreasePosition(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        uint256 _collateralDelta,\\n        uint256 _sizeDelta,\\n        bool _isLong,\\n        address _receiver\\n    ) external returns (uint256);\\n\\n    function liquidatePosition(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        bool _isLong,\\n        address _feeReceiver\\n    ) external;\\n\\n    function tokenToUsdMin(address _token, uint256 _tokenAmount) external view returns (uint256);\\n\\n    function priceFeed() external view returns (address);\\n\\n    function fundingRateFactor() external view returns (uint256);\\n\\n    function stableFundingRateFactor() external view returns (uint256);\\n\\n    function cumulativeFundingRates(address _token) external view returns (uint256);\\n\\n    function getNextFundingRate(address _token) external view returns (uint256);\\n\\n    function getFeeBasisPoints(\\n        address _token,\\n        uint256 _usdqDelta,\\n        uint256 _feeBasisPoints,\\n        uint256 _taxBasisPoints,\\n        bool _increment\\n    ) external view returns (uint256);\\n\\n    function liquidationFeeUsd() external view returns (uint256);\\n\\n    function taxBasisPoints() external view returns (uint256);\\n\\n    function stableTaxBasisPoints() external view returns (uint256);\\n\\n    function mintBurnFeeBasisPoints() external view returns (uint256);\\n\\n    function swapFeeBasisPoints() external view returns (uint256);\\n\\n    function stableSwapFeeBasisPoints() external view returns (uint256);\\n\\n    function marginFeeBasisPoints() external view returns (uint256);\\n\\n    function allWhitelistedTokensLength() external view returns (uint256);\\n\\n    function allWhitelistedTokens(uint256) external view returns (address);\\n\\n    function whitelistedTokens(address _token) external view returns (bool);\\n\\n    function stableTokens(address _token) external view returns (bool);\\n\\n    function shortableTokens(address _token) external view returns (bool);\\n\\n    function feeReserves(address _token) external view returns (uint256);\\n\\n    function globalShortSizes(address _token) external view returns (uint256);\\n\\n    function globalShortAveragePrices(address _token) external view returns (uint256);\\n\\n    function maxGlobalShortSizes(address _token) external view returns (uint256);\\n\\n    function tokenDecimals(address _token) external view returns (uint256);\\n\\n    function tokenWeights(address _token) external view returns (uint256);\\n\\n    function guaranteedUsd(address _token) external view returns (uint256);\\n\\n    function poolAmounts(address _token) external view returns (uint256);\\n\\n    function bufferAmounts(address _token) external view returns (uint256);\\n\\n    function reservedAmounts(address _token) external view returns (uint256);\\n\\n    function usdqAmounts(address _token) external view returns (uint256);\\n\\n    function maxUsdqAmounts(address _token) external view returns (uint256);\\n\\n    function getRedemptionAmount(address _token, uint256 _usdqAmount) external view returns (uint256);\\n\\n    function getMaxPrice(address _token) external view returns (uint256);\\n\\n    function getMinPrice(address _token) external view returns (uint256);\\n\\n    function getDelta(\\n        address _indexToken,\\n        uint256 _size,\\n        uint256 _averagePrice,\\n        bool _isLong,\\n        uint256 _lastIncreasedTime\\n    ) external view returns (bool, uint256);\\n\\n    function getPosition(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        bool _isLong\\n    )\\n        external\\n        view\\n        returns (\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256,\\n            uint256,\\n            bool,\\n            uint256\\n        );\\n}\\n\",\"keccak256\":\"0xc247c3dc87351e3bdc8dc14694ca7ee035b9e52ccfd7abcfe0f6e59f1d1598e0\",\"license\":\"MIT\"},\"contracts/core/interfaces/IVaultUtils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IVaultUtils {\\n    function updateCumulativeFundingRate(\\n        address _collateralToken,\\n        address _indexToken\\n    ) external returns (bool);\\n\\n    function validateIncreasePosition(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        uint256 _sizeDelta,\\n        bool _isLong\\n    ) external view;\\n\\n    function validateDecreasePosition(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        uint256 _collateralDelta,\\n        uint256 _sizeDelta,\\n        bool _isLong,\\n        address _receiver\\n    ) external view;\\n\\n    function validateLiquidation(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        bool _isLong,\\n        bool _raise\\n    ) external view returns (uint256, uint256);\\n\\n    function getEntryFundingRate(\\n        address _collateralToken,\\n        address _indexToken,\\n        bool _isLong\\n    ) external view returns (uint256);\\n\\n    function getPositionFee(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        bool _isLong,\\n        uint256 _sizeDelta\\n    ) external view returns (uint256);\\n\\n    function getFundingFee(\\n        address _account,\\n        address _collateralToken,\\n        address _indexToken,\\n        bool _isLong,\\n        uint256 _size,\\n        uint256 _entryFundingRate\\n    ) external view returns (uint256);\\n\\n    function getBuyUsdqFeeBasisPoints(address _token, uint256 _usdqAmount)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function getSellUsdqFeeBasisPoints(address _token, uint256 _usdqAmount)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function getSwapFeeBasisPoints(\\n        address _tokenIn,\\n        address _tokenOut,\\n        uint256 _usdqAmount\\n    ) external view returns (uint256);\\n\\n    function getFeeBasisPoints(\\n        address _token,\\n        uint256 _usdqDelta,\\n        uint256 _feeBasisPoints,\\n        uint256 _taxBasisPoints,\\n        bool _increment\\n    ) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xafc12294f1c958c02e178106e3db33710a7f4c904f8ef5f1549ceba151427509\",\"license\":\"MIT\"},\"contracts/libraries/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xcd6e686bb83826306dfe5831e369ac9f462705a7afe1a18c3c042940a1d59d8a\",\"license\":\"MIT\"},\"contracts/libraries/token/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x52455e4835fa0f6e8846c56fcd18484b8012049f38b2f465f4374d9316d557a5\",\"license\":\"MIT\"},\"contracts/libraries/token/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../math/SafeMath.sol\\\";\\nimport \\\"../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0), \\\"SafeERC20: approve from non-zero to non-zero allowance\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2179c12e4ac50e8a769b1b43f43558f42bf511fcd7236e034c13c6e4450dbe85\",\"license\":\"MIT\"},\"contracts/libraries/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.6.12;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) private pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xb0ac6523715fd08440082ed1ab1db37b7b5a009f9948c29ce1e63d17171e1ba6\",\"license\":\"MIT\"},\"contracts/libraries/utils/IterableMapping.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.6.12;\\n\\nenum OrderType{ SWAP, INCREASE, DECREASE }\\n\\nstruct Orders {\\n    address account;\\n    uint256 orderIndex;\\n    OrderType orderType;\\n}\\n\\nstruct IndexValue { uint256 keyIndex; Orders value; }\\nstruct KeyFlag { uint256 key; bool deleted; }\\n\\nstruct itmap {\\n    mapping(uint256 => IndexValue) data;\\n    KeyFlag[] keys;\\n    uint256 size;\\n}\\n\\nlibrary IterableMapping {\\n    function insert(itmap storage self, uint256 key, Orders memory value) internal returns (bool replaced) {\\n        uint256 keyIndex = self.data[key].keyIndex;\\n        self.data[key].value = value;\\n        if (keyIndex > 0)\\n            return true;\\n        else {\\n            keyIndex = self.keys.length;\\n            self.keys.push();\\n            self.data[key].keyIndex = keyIndex + 1;\\n            self.keys[keyIndex].key = key;\\n            self.size++;\\n            return false;\\n        }\\n    }\\n\\n    function remove(itmap storage self, uint256 key) internal returns (bool success) {\\n        uint256 keyIndex = self.data[key].keyIndex;\\n        if (keyIndex == 0)\\n            return false;\\n        delete self.data[key];\\n        self.keys[keyIndex - 1].deleted = true;\\n        self.size --;\\n    }\\n\\n    function contains(itmap storage self, uint256 key) internal view returns (bool) {\\n        return self.data[key].keyIndex > 0;\\n    }\\n\\n    function iterate_start(itmap storage self) internal view returns (uint256 keyIndex) {\\n        return iterate_next(self, uint256(-1));\\n    }\\n\\n    function iterate_valid(itmap storage self, uint256 keyIndex) internal view returns (bool) {\\n        return keyIndex < self.keys.length;\\n    }\\n\\n    function iterate_next(itmap storage self, uint256 keyIndex) internal view returns (uint256 r_keyIndex) {\\n        keyIndex++;\\n        while (keyIndex < self.keys.length && self.keys[keyIndex].deleted)\\n            keyIndex++;\\n        return keyIndex;\\n    }\\n\\n    function iterate_get(itmap storage self, uint256 keyIndex) internal view returns (uint256 key, Orders memory value) {\\n        key = self.keys[keyIndex].key;\\n        value = self.data[key].value;\\n    }\\n}\",\"keccak256\":\"0xae77c5e801395cc51c60bebe0befb675f6a5083c92d0aad9d6f7b45dbaa87c25\",\"license\":\"GPL-3.0\"},\"contracts/libraries/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\ncontract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() internal {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x223b08d372e9f820805da8b8cbc742bf4c0b7e9fdd1cab8165006ba570ce0b52\",\"license\":\"MIT\"},\"contracts/tokens/interfaces/IWETH.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\ninterface IWETH {\\n    function deposit() external payable;\\n    function transfer(address to, uint value) external returns (bool);\\n    function withdraw(uint) external;\\n}\\n\",\"keccak256\":\"0x29613132c0162f9cdc8336e895d1da9aaf3660909adcf1a0134d714e53524ca4\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526012805460ff1916905534801561001a57600080fd5b506001600055600a80546001600160a01b03191633179055615e3c80620000426000396000f3fe60806040526004361061026a5760003560e01c80639e71b0f011610144578063d3bab1d1116100b6578063f2d2e01b1161007a578063f2d2e01b14610fee578063f882ac071461109d578063f887ea40146110c7578063fb8c099f146110dc578063fbfa77cf14611147578063fc2cee621461115c576102c5565b8063d3bab1d114610ea4578063d566d0ca14610f38578063d7c41c7914610f6b578063e6dcd2fb14610fc4578063ee138d0f14610fd9576102c5565b8063b142a4b011610108578063b142a4b014610bc3578063c4a1821b14610cad578063c86b0f7d14610d5d578063cfad57a214610d9b578063d0d40cd614610dce578063d38ab51914610e61576102c5565b80639e71b0f014610af8578063a397ea5414610b22578063a849d64414610b66578063ae46415b14610b7b578063aec2245514610b90576102c5565b80633fc8cef3116101dd57806379221fa2116101a157806379221fa2146107d6578063807c5600146108555780638de10c2e14610a075780639000196214610a1c57806395082d2514610aa55780639983ee1b14610aba576102c5565b80633fc8cef3146106e557806347e0bbd0146106fa5780634c54f0b01461072457806363ae21031461078e578063756677a1146107a3576102c5565b806311d9444a1161022f57806311d9444a1461044957806312d43a511461048c578063269ae6c2146104bd5780632701808c146105885780632b7d62901461061c578063392e53cd146106bc576102c5565b8062cf066b146102ca578063026032ee1461030f57806307c7edc31461039a5780630d5cc938146103dd5780630f21d1d714610407576102c5565b366102c557600b546001600160a01b031633146102c3576040805162461bcd60e51b815260206004820152601260248201527127a11d1034b73b30b634b21039b2b73232b960711b604482015290519081900360640190fd5b005b600080fd5b3480156102d657600080fd5b506102fd600480360360208110156102ed57600080fd5b50356001600160a01b0316611186565b60408051918252519081900360200190f35b34801561031b57600080fd5b506103486004803603604081101561033257600080fd5b506001600160a01b038135169060200135611198565b604080516001600160a01b03998a168152602081019890985295909716868601526060860193909352901515608085015260a0840152151560c083015260e08201929092529051908190036101000190f35b3480156103a657600080fd5b506102c3600480360360608110156103bd57600080fd5b506001600160a01b03813581169160208101359160409091013516611294565b3480156103e957600080fd5b506102c36004803603602081101561040057600080fd5b50356116cc565b34801561041357600080fd5b506102fd6004803603606081101561042a57600080fd5b5080356001600160a01b0316906020810135906040013560ff166116d9565b34801561045557600080fd5b506102c36004803603606081101561046c57600080fd5b506001600160a01b03813581169160208101359160409091013516611739565b34801561049857600080fd5b506104a1611b8f565b604080516001600160a01b039092168252519081900360200190f35b6102c360048036036101008110156104d457600080fd5b810190602081018135600160201b8111156104ee57600080fd5b82018360208201111561050057600080fd5b803590602001918460208302840111600160201b8311171561052157600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955050823593505050602081013590604081013590606081013515159060808101359060a081013515159060c001351515611b9e565b34801561059457600080fd5b506105c1600480360360408110156105ab57600080fd5b506001600160a01b038135169060200135612006565b604080516001600160a01b039a8b168152988a1660208a0152888101979097529490971660608701526080860192909252151560a085015260c084015292151560e08301526101008201929092529051908190036101200190f35b34801561062857600080fd5b506106556004803603604081101561063f57600080fd5b506001600160a01b038135169060200135612107565b604080516001600160a01b039b8c168152998b1660208b015289810198909852958916606089015293909716608087015260a0860191909152151560c085015260e08401949094529215156101008301526101208201929092529051908190036101400190f35b3480156106c857600080fd5b506106d161217a565b604080519115158252519081900360200190f35b3480156106f157600080fd5b506104a1612183565b34801561070657600080fd5b506102c36004803603602081101561071d57600080fd5b5035612192565b34801561073057600080fd5b50610775600480360360a081101561074757600080fd5b5080351515906020810135906001600160a01b036040820135169060608101351515906080013515156124ab565b6040805192835290151560208301528051918290030190f35b34801561079a57600080fd5b506102fd61262a565b3480156107af57600080fd5b506102c3600480360360208110156107c657600080fd5b50356001600160a01b0316612630565b3480156107e257600080fd5b5061080f600480360360408110156107f957600080fd5b506001600160a01b03813516906020013561265a565b604080516001600160a01b039098168852602088019690965286860194909452606086019290925215156080850152151560a084015260c0830152519081900360e00190f35b34801561086157600080fd5b506102c36004803603606081101561087857600080fd5b810190602081018135600160201b81111561089257600080fd5b8201836020820111156108a457600080fd5b803590602001918460208302840111600160201b831117156108c557600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561091457600080fd5b82018360208201111561092657600080fd5b803590602001918460208302840111600160201b8311171561094757600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561099657600080fd5b8201836020820111156109a857600080fd5b803590602001918460208302840111600160201b831117156109c957600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506126b1945050505050565b348015610a1357600080fd5b506102fd612749565b348015610a2857600080fd5b50610a4860048036036020811015610a3f57600080fd5b5035151561274f565b60405180831515815260200180602001828103825283818151815260200191508051906020019060200280838360005b83811015610a90578181015183820152602001610a78565b50505050905001935050505060405180910390f35b348015610ab157600080fd5b506102fd612d27565b348015610ac657600080fd5b506102c360048036036080811015610add57600080fd5b50803590602081013590604081013590606001351515612d38565b348015610b0457600080fd5b506102c360048036036020811015610b1b57600080fd5b5035612e90565b348015610b2e57600080fd5b506102c3600480360360a0811015610b4557600080fd5b50803590602081013590604081013590606081013590608001351515613154565b348015610b7257600080fd5b506104a16132bc565b348015610b8757600080fd5b506102fd6132cb565b348015610b9c57600080fd5b506102fd60048036036020811015610bb357600080fd5b50356001600160a01b03166132d7565b6102c36004803603610160811015610bda57600080fd5b810190602081018135600160201b811115610bf457600080fd5b820183602082011115610c0657600080fd5b803590602001918460208302840111600160201b83111715610c2757600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295505082359350506001600160a01b036020830135811692604081013592506060810135916080820135169060a081013515159060c08101359060e081013515159061010081013590610120013515156132e9565b348015610cb957600080fd5b506106d160048036036040811015610cd057600080fd5b810190602081018135600160201b811115610cea57600080fd5b820183602082011115610cfc57600080fd5b803590602001918460208302840111600160201b83111715610d1d57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550509135925061372a915050565b348015610d6957600080fd5b506102c360048036036080811015610d8057600080fd5b508035906020810135906040810135906060013515156138ec565b348015610da757600080fd5b506102c360048036036020811015610dbe57600080fd5b50356001600160a01b0316613ab5565b348015610dda57600080fd5b50610e0760048036036040811015610df157600080fd5b506001600160a01b038135169060200135613adf565b604080516001600160a01b039a8b168152988a1660208a015296909816878701526060870194909452608086019290925260a0850152151560c0840152151560e08301526101008201929092529051908190036101200190f35b348015610e6d57600080fd5b506102c360048036036060811015610e8457600080fd5b506001600160a01b03813581169160208101359160409091013516613c9c565b348015610eb057600080fd5b50610edd60048036036040811015610ec757600080fd5b506001600160a01b038135169060200135614122565b604080516001600160a01b039a8b1681526020810199909952968916888801529490971660608701526080860192909252151560a085015260c084015292151560e08301526101008201929092529051908190036101200190f35b348015610f4457600080fd5b506102fd60048036036020811015610f5b57600080fd5b50356001600160a01b0316614210565b348015610f7757600080fd5b506102c3600480360360c0811015610f8e57600080fd5b506001600160a01b0381358116916020810135821691604082013581169160608101359091169060808101359060a00135614222565b348015610fd057600080fd5b506102fd6142d4565b348015610fe557600080fd5b506104a16142da565b348015610ffa57600080fd5b506110276004803603604081101561101157600080fd5b506001600160a01b0381351690602001356142e9565b604080516001600160a01b039d8e1681529b8d1660208d0152998c168b8b015260608b019890985295909916608089015260a088019390935290151560c087015260e086015215156101008501526101208401949094529215156101408301526101608201929092529051908190036101800190f35b3480156110a957600080fd5b506102c3600480360360208110156110c057600080fd5b5035614369565b3480156110d357600080fd5b506104a16146b4565b6102c360048036036101408110156110f357600080fd5b506001600160a01b038135811691602081013591604082013581169160608101359091169060808101359060a081013515159060c08101359060e081013515159061010081013590610120013515156146c3565b34801561115357600080fd5b506104a16147e2565b34801561116857600080fd5b506102c36004803603602081101561117f57600080fd5b50356147f1565b60096020526000908152604090205481565b6000806000806000806000806111ac615b1b565b505050506001600160a01b03968716600090815260066020818152604080842099845298815291889020885161018081018a5281548b16815260018201548b1693810184905260028201548b1699810199909952600381015460608a018190526004820154909a1660808a01819052600582015460a08b018190529282015460ff908116151560c08c01819052600784015460e08d018190526008850154831615156101008e0181905260098601546101208f0152600a86015490931615156101408e0152600b90940154610160909c018c9052949c919a9399509397509095509193509150565b600260005414156112da576040805162461bcd60e51b815260206004820152601f6024820152600080516020615d25833981519152604482015290519081900360640190fd5b60026000556112e76147fe565b6112ef615b7f565b6001600160a01b0380851660009081526008602090815260408083208784528252918290208251610100810184528154909416845260018101805484518185028101850190955280855291938584019390929083018282801561137b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161135d575b5050509183525050600282015460208201526003820154604082015260048201546060820152600582015460ff8082161515608084015261010090910416151560a082015260069091015460c09091015280519091506001600160a01b0316611419576040805162461bcd60e51b81526020600482015260166024820152600080516020615d45833981519152604482015290519081900360640190fd5b8060a0015115611486576114358160200151826080015161372a565b611486576040805162461bcd60e51b815260206004820152601f60248201527f4f423a20696e76616c696420707269636520666f7220657865637574696f6e00604482015290519081900360640190fd5b6001600160a01b0384166000908152600860209081526040808320868452909152812080546001600160a01b0319168155906114c56001830182615bd1565b50600060028201819055600382018190556004820181905560058201805461ffff1916905560069091018190556114ff908590859061484f565b600e54604082015160208301518051611547936001600160a01b031692919060009061152757fe5b60200260200101516001600160a01b03166148709092919063ffffffff16565b600b54602082015180516000926001600160a01b03169190600019810190811061156d57fe5b60200260200101516001600160a01b031614801561158c57508160c001515b156115b9576115a482602001518360600151306148c7565b90506115b48183600001516149fc565b6115d3565b6115d08260200151836060015184600001516148c7565b90505b6115e18260e00151846149fc565b846001600160a01b03167f7e1fe496989eea92b738a562dbf9c0ae6aa6fcf3f1ef09e95ee4f7603721706b858460200151856040015186606001518688608001518960a001518a60c001518b60e00151604051808a8152602001806020018981526020018881526020018781526020018681526020018515158152602001841515815260200183815260200182810382528a818151815260200191508051906020019060200280838360005b838110156116a557818101518382015260200161168d565b505050509050019a505050505050505050505060405180910390a250506001600055505050565b6116d4614a79565b601155565b600083838360405160200180846001600160a01b031660601b815260140183815260200182600281111561170957fe5b60f81b815260010193505050506040516020818303038152906040528051906020012060001c90505b9392505050565b6002600054141561177f576040805162461bcd60e51b815260206004820152601f6024820152600080516020615d25833981519152604482015290519081900360640190fd5b600260005561178c6147fe565b611794615b1b565b506001600160a01b03808416600090815260066020818152604080842087855282529283902083516101808101855281548616808252600183015487169382019390935260028201548616948101949094526003810154606085015260048101549094166080840152600584015460a08401529083015460ff908116151560c0840152600784015460e08401526008840154811615156101008401526009840154610120840152600a840154161515610140830152600b9092015461016082015290611895576040805162461bcd60e51b81526020600482015260166024820152600080516020615d45833981519152604482015290519081900360640190fd5b60006118b78261010001518360e0015184608001518560c001511560016124ab565b506001600160a01b0386166000908152600660208181526040808420898552909152822080546001600160a01b031990811682556001820180548216905560028083018054831690556003830185905560048301805490921690915560058201849055918101805460ff19908116909155600782018490556008820180548216905560098201849055600a820180549091169055600b0191909155909150611962908690869061484f565b600d5482516020808501516080860151606087015160a088015160c089015160408051632662166b60e01b81526001600160a01b0398891660048201529588166024870152938716604486015260648501929092526084840152151560a48301523060c4830152516000949390931692632662166b9260e48084019391929182900301818787803b1580156119f657600080fd5b505af1158015611a0a573d6000803e3d6000fd5b505050506040513d6020811015611a2057600080fd5b505160408401519091506001600160a01b031615611a7357600e546020840151611a57916001600160a01b03918216911683614870565b611a708360200151846040015185610120015130614ac8565b90505b82610140015115611a9157611a8c818460000151614bb4565b611aae565b82516040840151611aae916001600160a01b039091169083614870565b611abd836101600151856149fc565b82600001516001600160a01b03167f9a382661d6573da86db000471303be6f0b2b1bb66089b08e3c16a85d7b6e94f8868560200151866060015187608001518860a001518960c001518a60e001518b61010001518c61016001518c604051808b81526020018a6001600160a01b03168152602001898152602001886001600160a01b03168152602001878152602001861515815260200185815260200184151581526020018381526020018281526020019a505050505050505050505060405180910390a25050600160005550505050565b600a546001600160a01b031681565b60026000541415611be4576040805162461bcd60e51b815260206004820152601f6024820152600080516020615d25833981519152604482015290519081900360640190fd5b6002600081905588511480611bfa575087516003145b611c46576040805162461bcd60e51b815260206004820152601860248201527709e847440d2dcecc2d8d2c840bee0c2e8d05cd8cadccee8d60431b604482015290519081900360640190fd5b87600189510381518110611c5657fe5b60200260200101516001600160a01b031688600081518110611c7457fe5b60200260200101516001600160a01b03161415611ccc576040805162461bcd60e51b815260206004820152601160248201527009e847440d2dcecc2d8d2c840bee0c2e8d607b1b604482015290519081900360640190fd5b600c5488516001600160a01b03909116908990600090611ce857fe5b60200260200101516001600160a01b031614158015611d375750600c5488516001600160a01b039091169089906000198101908110611d2357fe5b60200260200101516001600160a01b031614155b611d7c576040805162461bcd60e51b815260206004820152601160248201527027a11d1034b73b30b634b2103a37b5b2b760791b604482015290519081900360640190fd5b60008711611dc9576040805162461bcd60e51b815260206004820152601560248201527427a11d1034b73b30b634b2102fb0b6b7bab73a24b760591b604482015290519081900360640190fd5b601054831015611e0e576040805162461bcd60e51b815260206004820152601e6024820152600080516020615dc5833981519152604482015290519081900360640190fd5b611e16614c4f565b8115611efd57600b5488516001600160a01b03909116908990600090611e3857fe5b60200260200101516001600160a01b031614611e9b576040805162461bcd60e51b815260206004820152601e60248201527f4f423a206f6e6c79207765746820636f756c6420626520777261707065640000604482015290519081900360640190fd5b611ea58388614cb9565b3414611ef8576040805162461bcd60e51b815260206004820152601f60248201527f4f423a20696e636f72726563742076616c7565207472616e7366657272656400604482015290519081900360640190fd5b611fe7565b823414611f3b5760405162461bcd60e51b8152600401808060200182810382526027815260200180615cfe6027913960400191505060405180910390fd5b600d5488516001600160a01b0390911690631b827878908a90600090611f5d57fe5b602002602001015133308b6040518563ffffffff1660e01b815260040180856001600160a01b03168152602001846001600160a01b03168152602001836001600160a01b03168152602001828152602001945050505050600060405180830381600087803b158015611fce57600080fd5b505af1158015611fe2573d6000803e3d6000fd5b505050505b611ff7338989898989878a614d13565b50506001600055505050505050565b600080600080600080600080600061201c615b1b565b505050506001600160a01b0397881660009081526006602081815260408084209a845299815291899020895161018081018b5281548c16815260018201548c1693810184905260028201548c169a81018b90526003820154606082018190526004830154909c1660808201819052600583015460a083018190529383015460ff908116151560c08401819052600785015460e0850181905260088601548316151561010086018190526009870154610120870152600a8701549093161515610140860152600b90950154610160909401849052959e9c9d9c919b509399509397509095509093509150565b6004602081815260009384526040808520909152918352912080546001820154600283015460038401549484015460058501546006860154600787015460088801546009909801546001600160a01b03978816999688169895979687169690941694929360ff928316939192909116908a565b60125460ff1681565b600b546001600160a01b031681565b600260005414156121d8576040805162461bcd60e51b815260206004820152601f6024820152600080516020615d25833981519152604482015290519081900360640190fd5b60026000556121e5615bf2565b5033600090815260046020818152604080842085855282529283902083516101408101855281546001600160a01b039081168083526001840154821694830194909452600283015495820195909552600382015485166060820152928101549093166080830152600583015460a0830152600683015460ff908116151560c0840152600784015460e08401526008840154161515610100830152600990920154610120820152906122cb576040805162461bcd60e51b81526020600482015260166024820152600080516020615d45833981519152604482015290519081900360640190fd5b336000818152600460208181526040808420878552909152822080546001600160a01b0319908116825560018083018054831690556002830185905560038301805483169055928201805490911690556005810183905560068101805460ff19908116909155600782018490556008820180549091169055600901919091556123569190849061484f565b600b5460208201516001600160a01b039081169116141561239b576123966123908260400151836101200151614cb990919063ffffffff16565b336149fc565b6123d0565b6123c133826040015183602001516001600160a01b03166148709092919063ffffffff16565b6123d0816101200151336149fc565b80600001516001600160a01b03167fd500f34e0ec655b7614ae42e1d9c666d5e4dde909a1297829f8c5ecf00805d328383602001518460400151856060015186608001518760a001518860c001518960e001518a61010001518b6101200151604051808b81526020018a6001600160a01b03168152602001898152602001886001600160a01b03168152602001876001600160a01b03168152602001868152602001851515815260200184815260200183151581526020018281526020019a505050505050505050505060405180910390a250506001600055565b60008060008461253357600e54604080516340d3096b60e11b81526001600160a01b038981166004830152915191909216916381a612d6916024808301926020929190829003018186803b15801561250257600080fd5b505afa158015612516573d6000803e3d6000fd5b505050506040513d602081101561252c57600080fd5b50516125ad565b600e5460408051637092736960e11b81526001600160a01b0389811660048301529151919092169163e124e6d2916024808301926020929190829003018186803b15801561258057600080fd5b505afa158015612594573d6000803e3d6000fd5b505050506040513d60208110156125aa57600080fd5b50515b90506000886125be578782106125c2565b8782115b9050841561261c578061261c576040805162461bcd60e51b815260206004820152601f60248201527f4f423a20696e76616c696420707269636520666f7220657865637574696f6e00604482015290519081900360640190fd5b909890975095505050505050565b60105481565b612638614a79565b600f80546001600160a01b0319166001600160a01b0392909216919091179055565b60086020908152600092835260408084209091529082529020805460028201546003830154600484015460058501546006909501546001600160a01b039094169492939192909160ff808316926101009004169087565b60005b83518110156126e1576126d98482815181106126cc57fe5b6020026020010151614369565b6001016126b4565b5060005b82518110156127125761270a8382815181106126fd57fe5b6020026020010151612192565b6001016126e5565b5060005b81518110156127435761273b82828151811061272e57fe5b6020026020010151612e90565b600101612716565b50505050565b60115481565b60038054600091606091908290820267ffffffffffffffff8111801561277457600080fd5b5060405190808252806020026020018201604052801561279e578160200160208202803683370190505b50905060008215612c805760006127b56001614f1e565b90505b6127c3600182614f2c565b15612c7e576127d0615c46565b6127db600183614f37565b91506000905080826040015160028111156127f257fe5b141561290957612800615b7f565b82516001600160a01b0390811660009081526008602090815260408083208288015184528252918290208251610100810184528154909416845260018101805484518185028101850190955280855291938584019390929083018282801561289157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612873575b505050918352505060028201546020808301919091526003830154604083015260048301546060830152600583015460ff808216151560808086019190915261010090920416151560a084015260069093015460c090920191909152820151908201519192506129009161372a565b15915050612b90565b60018260400151600281111561291b57fe5b14156129f357612929615bf2565b5081516001600160a01b039081166000908152600460208181526040808420828801518552825280842081516101408101835281548716815260018201548716938101939093526002810154918301919091526003810154851660608301529182015490931660808401819052600582015460a0850152600682015460ff908116151560c08601819052600784015460e087018190526008850154909216151561010087018190526009909401546101208701526129e9949192916124ab565b9250612b90915050565b600282604001516002811115612a0557fe5b1415612b9057612a13615b1b565b5081516001600160a01b03908116600090815260066020818152604080842082880151855282528084208151610180810183528154871680825260018301548816948201859052600283015488168285015260038301546060830152600480840154891660808401819052600585015460a08501529684015460ff908116151560c08501819052600786015460e0860152600886015482161515610100808701919091526009870154610120870152600a8701549092161515610140860152600b90950154610160850152600e548651634a3f088d60e01b815292830193909352602482019690965260448101969096526064860192909252915191951692634a3f088d926084808301939192829003018186803b158015612b3457600080fd5b505afa158015612b48573d6000803e3d6000fd5b505050506040513d610100811015612b5f57600080fd5b505190508015612b8d57612b898261010001518360e0015184608001518560c001511560006124ab565b9350505b50505b8015612c69578815612bbd575050604080516000815260208101909152600196509450612d229350505050565b8160000151858560030281518110612bd157fe5b60200260200101906001600160a01b031690816001600160a01b0316815250508160200151858560030260010181518110612c0857fe5b60200260200101906001600160a01b031690816001600160a01b03168152505081604001516002811115612c3857fe5b858560030260020181518110612c4a57fe5b6001600160a01b03909216602092830291909101909101526001909301925b50612c779050600182614fc8565b90506127b8565b505b60608160030267ffffffffffffffff81118015612c9c57600080fd5b50604051908082528060200260200182016040528015612cc6578160200160208202803683370190505b50905060005b82600302811015612d1757838181518110612ce357fe5b6020026020010151828281518110612cf757fe5b6001600160a01b0390921660209283029190910190910152600101612ccc565b509015159450925050505b915091565b6c0c9f2c9cd04674edea4000000081565b60026000541415612d7e576040805162461bcd60e51b815260206004820152601f6024820152600080516020615d25833981519152604482015290519081900360640190fd5b60026000908155338152600460209081526040808320878452909152902080546001600160a01b0316612de6576040805162461bcd60e51b81526020600482015260166024820152600080516020615d45833981519152604482015290519081900360640190fd5b6007810183905560088101805483151560ff19909116811790915560058201859055600382015460048301546006840154604080518a81526001600160a01b039485166020820152929093168284015260ff16151560608201526080810187905260a0810186905260c08101929092525133917f0a0360dd5c354235bbf8d386ba3b24ef8134088e0785677de1504df219d9149a919081900360e00190a250506001600055505050565b60026000541415612ed6576040805162461bcd60e51b815260206004820152601f6024820152600080516020615d25833981519152604482015290519081900360640190fd5b6002600055612ee3615b1b565b5033600090815260066020818152604080842085855282529283902083516101808101855281546001600160a01b03908116808352600184015482169483019490945260028301548116958201959095526003820154606082015260048201549094166080850152600581015460a08501529182015460ff908116151560c0850152600783015460e08501526008830154811615156101008501526009830154610120850152600a830154161515610140840152600b90910154610160830152612fe2576040805162461bcd60e51b81526020600482015260166024820152600080516020615d45833981519152604482015290519081900360640190fd5b336000818152600660208181526040808420878552909152822080546001600160a01b031990811682556001820180548216905560028083018054831690556003830185905560048301805490921690915560058201849055918101805460ff19908116909155600782018490556008820180548216905560098201849055600a820180549091169055600b019190915561307f9190849061484f565b61308e816101600151336149fc565b80600001516001600160a01b03167f1154174c82984656b028c8021671988f60a346497e56fe02554761184f82a075838360200151846060015185608001518660a001518760c001518860e001518961010001518a6101600151604051808a8152602001896001600160a01b03168152602001888152602001876001600160a01b0316815260200186815260200185151581526020018481526020018315158152602001828152602001995050505050505050505060405180910390a250506001600055565b6002600054141561319a576040805162461bcd60e51b815260206004820152601f6024820152600080516020615d25833981519152604482015290519081900360640190fd5b60026000908155338152600660209081526040808320888452909152902080546001600160a01b0316613202576040805162461bcd60e51b81526020600482015260166024820152600080516020615d45833981519152604482015290519081900360640190fd5b6007810183905560088101805483151560ff1990911681179091556005820185905560038201869055600182015460048301546006840154604080518b81526001600160a01b0394851660208201528082018b90529290931660608301526080820188905260ff16151560a082015260c0810186905260e08101929092525133917f75781255bc71c83f89f29e5a2599f2c174a562d2cd8f2e818a47f132e728049891908190036101000190a25050600160005550505050565b600f546001600160a01b031681565b670de0b6b3a764000081565b60056020526000908152604090205481565b6002600054141561332f576040805162461bcd60e51b815260206004820152601f6024820152600080516020615d25833981519152604482015290519081900360640190fd5b600260005561333c614c4f565b601054821015613381576040805162461bcd60e51b815260206004820152601e6024820152600080516020615dc5833981519152604482015290519081900360640190fd5b801561346857600b548b516001600160a01b03909116908c906000906133a357fe5b60200260200101516001600160a01b031614613406576040805162461bcd60e51b815260206004820152601e60248201527f4f423a206f6e6c79207765746820636f756c6420626520777261707065640000604482015290519081900360640190fd5b613410828b614cb9565b3414613463576040805162461bcd60e51b815260206004820152601f60248201527f4f423a20696e636f72726563742076616c7565207472616e7366657272656400604482015290519081900360640190fd5b613552565b8134146134a65760405162461bcd60e51b8152600401808060200182810382526027815260200180615cfe6027913960400191505060405180910390fd5b600d548b516001600160a01b0390911690631b827878908d906000906134c857fe5b602002602001015133308e6040518563ffffffff1660e01b815260040180856001600160a01b03168152602001846001600160a01b03168152602001836001600160a01b03168152602001828152602001945050505050600060405180830381600087803b15801561353957600080fd5b505af115801561354d573d6000803e3d6000fd5b505050505b60008b60018d51038151811061356457fe5b60200260200101519050600060018d51111561362257816001600160a01b03168d60008151811061359157fe5b60200260200101516001600160a01b031614156135e9576040805162461bcd60e51b815260206004820152601160248201527009e847440d2dcecc2d8d2c840bee0c2e8d607b1b604482015290519081900360640190fd5b613610600e60009054906101000a90046001600160a01b03168d8f60008151811061152757fe5b61361b8d8b306148c7565b9050613625565b508a5b600e5460408051630a48d5a960e01b81526001600160a01b0385811660048301526024820185905291516000939290921691630a48d5a991604480820192602092909190829003018186803b15801561367d57600080fd5b505afa158015613691573d6000803e3d6000fd5b505050506040513d60208110156136a757600080fd5b5051601154909150811015613703576040805162461bcd60e51b815260206004820152601b60248201527f4f423a20696e73756666696369656e7420636f6c6c61746572616c0000000000604482015290519081900360640190fd5b506137163383838b8f8e8d8d8d8d615019565b505060016000555050505050505050505050565b600082516002148061373d575082516003145b613789576040805162461bcd60e51b815260206004820152601860248201527709e847440d2dcecc2d8d2c840bee0c2e8d05cd8cadccee8d60431b604482015290519081900360640190fd5b60008360008151811061379857fe5b602002602001015190506000846001865103815181106137b457fe5b602090810291909101810151600e54604080516340d3096b60e11b81526001600160a01b0387811660048301529151939550600094859492909316926381a612d692602480840193829003018186803b15801561381057600080fd5b505afa158015613824573d6000803e3d6000fd5b505050506040513d602081101561383a57600080fd5b5051600e5460408051637092736960e11b81526001600160a01b038781166004830152915193955091169163e124e6d291602480820192602092909190829003018186803b15801561388b57600080fd5b505afa15801561389f573d6000803e3d6000fd5b505050506040513d60208110156138b557600080fd5b5051905060006138dc836138d6846c0c9f2c9cd04674edea40000000615244565b9061529d565b8710955050505050505b92915050565b60026000541415613932576040805162461bcd60e51b815260206004820152601f6024820152600080516020615d25833981519152604482015290519081900360640190fd5b60026000908155338152600860209081526040808320878452909152902080546001600160a01b031661399a576040805162461bcd60e51b81526020600482015260166024820152600080516020615d45833981519152604482015290519081900360640190fd5b838160030181905550828160040181905550818160050160006101000a81548160ff021916908315150217905550336001600160a01b03167fa7f9f4a25eb76f5ec01b1a429d95d6a00833f0f137c88827c58799a1c1ff0dfe868360010184600201548888888860050160019054906101000a900460ff1689600601546040518089815260200180602001888152602001878152602001868152602001851515815260200184151581526020018381526020018281038252898181548152602001915080548015613a9457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311613a76575b5050995050505050505050505060405180910390a250506001600055505050565b613abd614a79565b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000806000806000806000613af5615b7f565b6001600160a01b03808d1660009081526008602090815260408083208f845282529182902082516101008101845281549094168452600181018054845181850281018501909552808552919385840193909290830182828015613b8157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311613b63575b505050918352505060028201546020808301919091526003830154604083015260048301546060830152600583015460ff8082161515608085015261010090910416151560a083015260069092015460c09091015281015151909150613be8576000613c02565b8060200151600081518110613bf957fe5b60200260200101515b600182602001515111613c16576000613c30565b8160200151600181518110613c2757fe5b60200260200101515b600283602001515111613c44576000613c5e565b8260200151600281518110613c5557fe5b60200260200101515b8360400151846060015185608001518660a001518760c001518860e00151995099509950995099509950995099509950509295985092959850929598565b60026000541415613ce2576040805162461bcd60e51b815260206004820152601f6024820152600080516020615d25833981519152604482015290519081900360640190fd5b6002600055613cef6147fe565b613cf7615bf2565b506001600160a01b038084166000908152600460208181526040808420878552825292839020835161014081018552815486168082526001830154871693820193909352600282015494810194909452600381015485166060850152918201549093166080830152600581015460a0830152600681015460ff908116151560c0840152600782015460e084015260088201541615156101008301526009015461012082015290613ddc576040805162461bcd60e51b81526020600482015260166024820152600080516020615d45833981519152604482015290519081900360640190fd5b6000613dfd8261010001518360e0015184608001518560c0015160016124ab565b506001600160a01b0386166000908152600460208181526040808420898552909152822080546001600160a01b0319908116825560018083018054831690556002830185905560038301805483169055928201805490911690556005810183905560068101805460ff1990811690915560078201849055600882018054909116905560090191909155909150613e96908690869061484f565b600e5460408301516020840151613ebb926001600160a01b0391821692911690614870565b81606001516001600160a01b031682602001516001600160a01b031614613f93576040805160028082526060808301845292602083019080368337019050509050826020015181600081518110613f0e57fe5b60200260200101906001600160a01b031690816001600160a01b031681525050826060015181600181518110613f4057fe5b60200260200101906001600160a01b031690816001600160a01b0316815250506000613f6e826000306148c7565b600e546060860151919250613f90916001600160a01b03908116911683614870565b50505b600d5482516060840151608085015160a086015160c087015160408051630f8ee8bb60e11b81526001600160a01b03968716600482015294861660248601529285166044850152606484019190915215156084830152519190921691631f1dd1769160a480830192600092919082900301818387803b15801561401557600080fd5b505af1158015614029573d6000803e3d6000fd5b5050505061403c826101200151846149fc565b81600001516001600160a01b03167f7fb1c74d1ea6aa1c9c585e17ce8274c8ff98745e85e7459b73f87d784494f58e8584602001518560400151866060015187608001518860a001518960c001518a60e001518b61010001518c61012001518c604051808c81526020018b6001600160a01b031681526020018a8152602001896001600160a01b03168152602001886001600160a01b03168152602001878152602001861515815260200185815260200184151581526020018381526020018281526020019b50505050505050505050505060405180910390a250506001600055505050565b6000806000806000806000806000614138615bf2565b5050506001600160a01b03808a1660009081526004602081815260408084208d855282529283902083516101408101855281548616815260018201548616928101839052600282015494810185905260038201548616606082018190529382015490951660808601819052600582015460a08701819052600683015460ff908116151560c08901819052600785015460e08a01819052600886015490921615156101008a01819052600990950154610120909901899052949e50959c50939a5098509196509450909250909295985092959850929598565b60076020526000908152604090205481565b61422a614a79565b60125460ff161561426e576040805162461bcd60e51b815260206004820152600960248201526827a11d1032b93937b960b91b604482015290519081900360640190fd5b6012805460ff19166001179055600d80546001600160a01b039788166001600160a01b031991821617909155600e805496881696821696909617909555600b805494871694861694909417909355600c8054929095169190931617909255601055601155565b60035481565b600c546001600160a01b031681565b6006602081815260009384526040808520909152918352912080546001820154600283015460038401546004850154600586015496860154600787015460088801546009890154600a8a0154600b909a01546001600160a01b03998a169b988a169a978a16999698969095169660ff94851695939492831693919216908c565b600260005414156143af576040805162461bcd60e51b815260206004820152601f6024820152600080516020615d25833981519152604482015290519081900360640190fd5b60026000556143bc615b7f565b33600090815260086020908152604080832085845282529182902082516101008101845281546001600160a01b031681526001820180548551818602810186019096528086529194929385810193929083018282801561444557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311614427575b5050509183525050600282015460208201526003820154604082015260048201546060820152600582015460ff8082161515608084015261010090910416151560a082015260069091015460c09091015280519091506001600160a01b03166144e3576040805162461bcd60e51b81526020600482015260166024820152600080516020615d45833981519152604482015290519081900360640190fd5b336000908152600860209081526040808320858452909152812080546001600160a01b0319168155906145196001830182615bd1565b50600060028201819055600382018190556004820181905560058201805461ffff191690556006909101819055614553903390849061484f565b600b54602082015180516001600160a01b039092169160009061457257fe5b60200260200101516001600160a01b031614156145ac576145a761239082604001518360e00151614cb990919063ffffffff16565b6145d4565b6145c6338260400151836020015160008151811061152757fe5b6145d48160e00151336149fc565b336001600160a01b03167fefd66d4f9c2f880c70aedeb5b26a44fb474cea07e5d6c533f2d27c303d5d94538383602001518460400151856060015186608001518760a001518860c001518960e00151604051808981526020018060200188815260200187815260200186815260200185151581526020018415158152602001838152602001828103825289818151815260200191508051906020019060200280838360005b83811015614691578181015183820152602001614679565b50505050905001995050505050505050505060405180910390a250506001600055565b600d546001600160a01b031681565b60026000541415614709576040805162461bcd60e51b815260206004820152601f6024820152600080516020615d25833981519152604482015290519081900360640190fd5b6002600055614716614c4f565b601054341161475a576040805162461bcd60e51b815260206004820152601e6024820152600080516020615dc5833981519152604482015290519081900360640190fd5b80156147be57600b546001600160a01b038881169116146147be576040805162461bcd60e51b815260206004820152601960248201527827a11d1034b73b30b634b2102fb932b1b2b4bb32aa37b5b2b760391b604482015290519081900360640190fd5b6147d1338989898e8e8b8b8b8b8b6152df565b505060016000555050505050505050565b600e546001600160a01b031681565b6147f9614a79565b601055565b600f546001600160a01b0316331461484d576040805162461bcd60e51b815260206004820152600d60248201526c27a11d103337b93134b23232b760991b604482015290519081900360640190fd5b565b600061485c8484846116d9565b905061486960018261553a565b5050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526148c29084906155d7565b505050565b600083516002141561490e57614907846000815181106148e357fe5b6020026020010151856001815181106148f857fe5b60200260200101518585614ac8565b9050611732565b8351600314156149b457600061494f8560008151811061492a57fe5b60200260200101518660018151811061493f57fe5b6020026020010151600030614ac8565b9050614978600e60009054906101000a90046001600160a01b0316828760018151811061152757fe5b6149ac8560018151811061498857fe5b60200260200101518660028151811061499d57fe5b60200260200101518686614ac8565b915050611732565b6040805162461bcd60e51b815260206004820152601860248201527709e847440d2dcecc2d8d2c840bee0c2e8d05cd8cadccee8d60431b604482015290519081900360640190fd5b600b5460408051632e1a7d4d60e01b81526004810185905290516001600160a01b0390921691632e1a7d4d9160248082019260009290919082900301818387803b158015614a4957600080fd5b505af1158015614a5d573d6000803e3d6000fd5b50614a75925050506001600160a01b03821683615688565b5050565b600a546001600160a01b0316331461484d576040805162461bcd60e51b815260206004820152600d60248201526c27a11d103337b93134b23232b760991b604482015290519081900360640190fd5b600e5460408051634998b10960e11b81526001600160a01b03878116600483015286811660248301528481166044830152915160009384931691639331621291606480830192602092919082900301818787803b158015614b2857600080fd5b505af1158015614b3c573d6000803e3d6000fd5b505050506040513d6020811015614b5257600080fd5b5051905083811015614bab576040805162461bcd60e51b815260206004820152601a60248201527f4f423a20696e73756666696369656e7420616d6f756e744f7574000000000000604482015290519081900360640190fd5b95945050505050565b600b5460408051632e1a7d4d60e01b81526004810185905290516001600160a01b0390921691632e1a7d4d9160248082019260009290919082900301818387803b158015614c0157600080fd5b505af1158015614c15573d6000803e3d6000fd5b50506040516001600160a01b038416925084156108fc02915084906000818181858888f193505050501580156148c2573d6000803e3d6000fd5b341561484d57600b60009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b158015614ca557600080fd5b505af1158015614869573d6000803e3d6000fd5b600082820183811015611732576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b038816600090815260096020526040902054614d34615b7f565b6040518061010001604052808b6001600160a01b031681526020018a815260200189815260200188815260200187815260200186151581526020018515158152602001848152509050614d91600183614cb990919063ffffffff16565b6001600160a01b038b8116600090815260096020908152604080832094909455600881528382208683528152929020835181546001600160a01b03191692169190911781558282015180518493614def926001850192910190615c64565b5060408201516002820155606082015160038201556080820151600482015560a082015160058201805460c085015115156101000261ff001993151560ff19909216919091179290921691909117905560e090910151600690910155614e578a83600061576d565b896001600160a01b03167fdf06bb56ffc4029dc0b62b68bb5bbadea93a38b530cefc9b81afb742a6555d88838b8b8b8b8b8b8b604051808981526020018060200188815260200187815260200186815260200185151581526020018415158152602001838152602001828103825289818151815260200191508051906020019060200280838360005b83811015614ef8578181015183820152602001614ee0565b50505050905001995050505050505050505060405180910390a250505050505050505050565b60006138e682600019614fc8565b600191909101541190565b6000614f41615c46565b836001018381548110614f5057fe5b600091825260208083206002928302015480845287825260409384902084516060810186526001820180546001600160a01b0316825282860154948201949094526003909101549196509391929184019160ff90911690811115614fb057fe5b6002811115614fbb57fe5b8152505090509250929050565b60010160005b6001830154821080156150035750826001018281548110614feb57fe5b600091825260209091206001600290920201015460ff165b1561501357600190910190614fce565b50919050565b6001600160a01b038a1660009081526005602052604090205461503a615bf2565b6040518061014001604052808d6001600160a01b031681526020018c6001600160a01b031681526020018b81526020018a6001600160a01b03168152602001896001600160a01b03168152602001888152602001871515815260200186815260200185151581526020018481525090506150be600183614cb990919063ffffffff16565b6001600160a01b038d81166000908152600560208181526040808420959095556004808252858420888552825292859020865181546001600160a01b031990811691871691909117825591870151600180830180548516928816929092179091559587015160028201556060870151600382018054841691871691909117905560808701519381018054909216939094169290921790915560a08401519082015560c083015160068201805460ff1990811692151592909217905560e084015160078301556101008401516008830180549092169015151790556101208301516009909101556151b1908d90849061576d565b604080518381526001600160a01b038d811660208301528183018d90528b811660608301528a8116608083015260a082018a905288151560c083015260e0820188905286151561010083015261012082018690529151918e16917fb27b9afe3043b93788c40cfc3cc73f5d928a2e40f3ba01820b246426de8fa1b9918190036101400190a2505050505050505050505050565b600082615253575060006138e6565b8282028284828161526057fe5b04146117325760405162461bcd60e51b8152600401808060200182810382526021815260200180615de56021913960400191505060405180910390fd5b600061173283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506157c8565b6001600160a01b038b16600090815260076020526040902054615300615b1b565b6040518061018001604052808e6001600160a01b031681526020018d6001600160a01b031681526020018c6001600160a01b031681526020018b81526020018a6001600160a01b03168152602001898152602001881515815260200187815260200186151581526020018581526020018415158152602001348152509050615392600183614cb990919063ffffffff16565b6001600160a01b03808f166000908152600760208181526040808420959095556006808252858420888552825292859020865181549086166001600160a01b0319918216178255918701516001820180549187169184169190911790559486015160028087018054928716928416929092179091556060870151600387015560808701516004870180549190961692169190911790935560a0850151600585015560c0850151918401805492151560ff1993841617905560e0850151908401556101008401516008840180549115159183169190911790556101208401516009840155610140840151600a8401805491151591909216179055610160830151600b909201919091556154a7908e90849061576d565b604080518381526001600160a01b038e811660208301528d811682840152606082018d90528b8116608083015260a082018b905289151560c083015260e08201899052871515610100830152346101208301529151918f16917fd2ee0e9806d1126080fe9778c80db9b118bfc117d4276993f5ae21a04624a051918190036101400190a250505050505050505050505050565b600081815260208390526040812054806155585760009150506138e6565b6000838152602085905260408120818155600180820180546001600160a01b03191690556002820192909255600301805460ff19169055808501805460001984019081106155a257fe5b60009182526020909120600291820201600101805460ff19169215159290921790915593909301805460001901905592915050565b606061562c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661586a9092919063ffffffff16565b8051909150156148c25780806020019051602081101561564b57600080fd5b50516148c25760405162461bcd60e51b815260040180806020018281038252602a815260200180615e06602a913960400191505060405180910390fd5b804710156156dd576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b6040516000906001600160a01b0384169083908381818185875af1925050503d8060008114615728576040519150601f19603f3d011682016040523d82523d6000602084013e61572d565b606091505b50509050806148c25760405162461bcd60e51b815260040180806020018281038252603a815260200180615d65603a913960400191505060405180910390fd5b600061577a8484846116d9565b9050615784615c46565b6040518060600160405280866001600160a01b031681526020018581526020018460028111156157b057fe5b905290506157c060018383615881565b505050505050565b600081836158545760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015615819578181015183820152602001615801565b50505050905090810190601f1680156158465780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161586057fe5b0495945050505050565b60606158798484600085615953565b949350505050565b60008281526020848152604080832080548551600180840180546001600160a01b0319166001600160a01b0390931692909217825594870151600280850191909155938701516003909301805492958895929493919260ff199092169184908111156158e957fe5b02179055505081159050615901576001915050611732565b506001808501805491820180825560008681526020889052604090208190558591908390811061592d57fe5b600091825260208220600291820201929092559086018054600101905591506117329050565b6060824710156159945760405162461bcd60e51b8152600401808060200182810382526026815260200180615d9f6026913960400191505060405180910390fd5b61599d85615aaf565b6159ee576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310615a2d5780518252601f199092019160209182019101615a0e565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114615a8f576040519150601f19603f3d011682016040523d82523d6000602084013e615a94565b606091505b5091509150615aa4828286615ab5565b979650505050505050565b3b151590565b60608315615ac4575081611732565b825115615ad45782518084602001fd5b60405162461bcd60e51b8152602060048201818152845160248401528451859391928392604401919085019080838360008315615819578181015183820152602001615801565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915290565b60405180610100016040528060006001600160a01b0316815260200160608152602001600081526020016000815260200160008152602001600015158152602001600015158152602001600081525090565b5080546000825590600052602060002090810190615bef9190615cc9565b50565b6040805161014081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081019190915290565b60408051606081018252600080825260208201819052909182015290565b828054828255906000526020600020908101928215615cb9579160200282015b82811115615cb957825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190615c84565b50615cc5929150615cde565b5090565b5b80821115615cc55760008155600101615cca565b5b80821115615cc55780546001600160a01b0319168155600101615cdf56fe4f423a20696e636f727265637420657865637574696f6e20666565207472616e736665727265645265656e7472616e637947756172643a207265656e7472616e742063616c6c004f423a206e6f6e2d6578697374656e74206f7264657200000000000000000000416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c4f423a20696e73756666696369656e7420657865637574696f6e206665650000536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a164736f6c634300060c000a",
  "deployedBytecode": "0x60806040526004361061026a5760003560e01c80639e71b0f011610144578063d3bab1d1116100b6578063f2d2e01b1161007a578063f2d2e01b14610fee578063f882ac071461109d578063f887ea40146110c7578063fb8c099f146110dc578063fbfa77cf14611147578063fc2cee621461115c576102c5565b8063d3bab1d114610ea4578063d566d0ca14610f38578063d7c41c7914610f6b578063e6dcd2fb14610fc4578063ee138d0f14610fd9576102c5565b8063b142a4b011610108578063b142a4b014610bc3578063c4a1821b14610cad578063c86b0f7d14610d5d578063cfad57a214610d9b578063d0d40cd614610dce578063d38ab51914610e61576102c5565b80639e71b0f014610af8578063a397ea5414610b22578063a849d64414610b66578063ae46415b14610b7b578063aec2245514610b90576102c5565b80633fc8cef3116101dd57806379221fa2116101a157806379221fa2146107d6578063807c5600146108555780638de10c2e14610a075780639000196214610a1c57806395082d2514610aa55780639983ee1b14610aba576102c5565b80633fc8cef3146106e557806347e0bbd0146106fa5780634c54f0b01461072457806363ae21031461078e578063756677a1146107a3576102c5565b806311d9444a1161022f57806311d9444a1461044957806312d43a511461048c578063269ae6c2146104bd5780632701808c146105885780632b7d62901461061c578063392e53cd146106bc576102c5565b8062cf066b146102ca578063026032ee1461030f57806307c7edc31461039a5780630d5cc938146103dd5780630f21d1d714610407576102c5565b366102c557600b546001600160a01b031633146102c3576040805162461bcd60e51b815260206004820152601260248201527127a11d1034b73b30b634b21039b2b73232b960711b604482015290519081900360640190fd5b005b600080fd5b3480156102d657600080fd5b506102fd600480360360208110156102ed57600080fd5b50356001600160a01b0316611186565b60408051918252519081900360200190f35b34801561031b57600080fd5b506103486004803603604081101561033257600080fd5b506001600160a01b038135169060200135611198565b604080516001600160a01b03998a168152602081019890985295909716868601526060860193909352901515608085015260a0840152151560c083015260e08201929092529051908190036101000190f35b3480156103a657600080fd5b506102c3600480360360608110156103bd57600080fd5b506001600160a01b03813581169160208101359160409091013516611294565b3480156103e957600080fd5b506102c36004803603602081101561040057600080fd5b50356116cc565b34801561041357600080fd5b506102fd6004803603606081101561042a57600080fd5b5080356001600160a01b0316906020810135906040013560ff166116d9565b34801561045557600080fd5b506102c36004803603606081101561046c57600080fd5b506001600160a01b03813581169160208101359160409091013516611739565b34801561049857600080fd5b506104a1611b8f565b604080516001600160a01b039092168252519081900360200190f35b6102c360048036036101008110156104d457600080fd5b810190602081018135600160201b8111156104ee57600080fd5b82018360208201111561050057600080fd5b803590602001918460208302840111600160201b8311171561052157600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955050823593505050602081013590604081013590606081013515159060808101359060a081013515159060c001351515611b9e565b34801561059457600080fd5b506105c1600480360360408110156105ab57600080fd5b506001600160a01b038135169060200135612006565b604080516001600160a01b039a8b168152988a1660208a0152888101979097529490971660608701526080860192909252151560a085015260c084015292151560e08301526101008201929092529051908190036101200190f35b34801561062857600080fd5b506106556004803603604081101561063f57600080fd5b506001600160a01b038135169060200135612107565b604080516001600160a01b039b8c168152998b1660208b015289810198909852958916606089015293909716608087015260a0860191909152151560c085015260e08401949094529215156101008301526101208201929092529051908190036101400190f35b3480156106c857600080fd5b506106d161217a565b604080519115158252519081900360200190f35b3480156106f157600080fd5b506104a1612183565b34801561070657600080fd5b506102c36004803603602081101561071d57600080fd5b5035612192565b34801561073057600080fd5b50610775600480360360a081101561074757600080fd5b5080351515906020810135906001600160a01b036040820135169060608101351515906080013515156124ab565b6040805192835290151560208301528051918290030190f35b34801561079a57600080fd5b506102fd61262a565b3480156107af57600080fd5b506102c3600480360360208110156107c657600080fd5b50356001600160a01b0316612630565b3480156107e257600080fd5b5061080f600480360360408110156107f957600080fd5b506001600160a01b03813516906020013561265a565b604080516001600160a01b039098168852602088019690965286860194909452606086019290925215156080850152151560a084015260c0830152519081900360e00190f35b34801561086157600080fd5b506102c36004803603606081101561087857600080fd5b810190602081018135600160201b81111561089257600080fd5b8201836020820111156108a457600080fd5b803590602001918460208302840111600160201b831117156108c557600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561091457600080fd5b82018360208201111561092657600080fd5b803590602001918460208302840111600160201b8311171561094757600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561099657600080fd5b8201836020820111156109a857600080fd5b803590602001918460208302840111600160201b831117156109c957600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506126b1945050505050565b348015610a1357600080fd5b506102fd612749565b348015610a2857600080fd5b50610a4860048036036020811015610a3f57600080fd5b5035151561274f565b60405180831515815260200180602001828103825283818151815260200191508051906020019060200280838360005b83811015610a90578181015183820152602001610a78565b50505050905001935050505060405180910390f35b348015610ab157600080fd5b506102fd612d27565b348015610ac657600080fd5b506102c360048036036080811015610add57600080fd5b50803590602081013590604081013590606001351515612d38565b348015610b0457600080fd5b506102c360048036036020811015610b1b57600080fd5b5035612e90565b348015610b2e57600080fd5b506102c3600480360360a0811015610b4557600080fd5b50803590602081013590604081013590606081013590608001351515613154565b348015610b7257600080fd5b506104a16132bc565b348015610b8757600080fd5b506102fd6132cb565b348015610b9c57600080fd5b506102fd60048036036020811015610bb357600080fd5b50356001600160a01b03166132d7565b6102c36004803603610160811015610bda57600080fd5b810190602081018135600160201b811115610bf457600080fd5b820183602082011115610c0657600080fd5b803590602001918460208302840111600160201b83111715610c2757600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295505082359350506001600160a01b036020830135811692604081013592506060810135916080820135169060a081013515159060c08101359060e081013515159061010081013590610120013515156132e9565b348015610cb957600080fd5b506106d160048036036040811015610cd057600080fd5b810190602081018135600160201b811115610cea57600080fd5b820183602082011115610cfc57600080fd5b803590602001918460208302840111600160201b83111715610d1d57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550509135925061372a915050565b348015610d6957600080fd5b506102c360048036036080811015610d8057600080fd5b508035906020810135906040810135906060013515156138ec565b348015610da757600080fd5b506102c360048036036020811015610dbe57600080fd5b50356001600160a01b0316613ab5565b348015610dda57600080fd5b50610e0760048036036040811015610df157600080fd5b506001600160a01b038135169060200135613adf565b604080516001600160a01b039a8b168152988a1660208a015296909816878701526060870194909452608086019290925260a0850152151560c0840152151560e08301526101008201929092529051908190036101200190f35b348015610e6d57600080fd5b506102c360048036036060811015610e8457600080fd5b506001600160a01b03813581169160208101359160409091013516613c9c565b348015610eb057600080fd5b50610edd60048036036040811015610ec757600080fd5b506001600160a01b038135169060200135614122565b604080516001600160a01b039a8b1681526020810199909952968916888801529490971660608701526080860192909252151560a085015260c084015292151560e08301526101008201929092529051908190036101200190f35b348015610f4457600080fd5b506102fd60048036036020811015610f5b57600080fd5b50356001600160a01b0316614210565b348015610f7757600080fd5b506102c3600480360360c0811015610f8e57600080fd5b506001600160a01b0381358116916020810135821691604082013581169160608101359091169060808101359060a00135614222565b348015610fd057600080fd5b506102fd6142d4565b348015610fe557600080fd5b506104a16142da565b348015610ffa57600080fd5b506110276004803603604081101561101157600080fd5b506001600160a01b0381351690602001356142e9565b604080516001600160a01b039d8e1681529b8d1660208d0152998c168b8b015260608b019890985295909916608089015260a088019390935290151560c087015260e086015215156101008501526101208401949094529215156101408301526101608201929092529051908190036101800190f35b3480156110a957600080fd5b506102c3600480360360208110156110c057600080fd5b5035614369565b3480156110d357600080fd5b506104a16146b4565b6102c360048036036101408110156110f357600080fd5b506001600160a01b038135811691602081013591604082013581169160608101359091169060808101359060a081013515159060c08101359060e081013515159061010081013590610120013515156146c3565b34801561115357600080fd5b506104a16147e2565b34801561116857600080fd5b506102c36004803603602081101561117f57600080fd5b50356147f1565b60096020526000908152604090205481565b6000806000806000806000806111ac615b1b565b505050506001600160a01b03968716600090815260066020818152604080842099845298815291889020885161018081018a5281548b16815260018201548b1693810184905260028201548b1699810199909952600381015460608a018190526004820154909a1660808a01819052600582015460a08b018190529282015460ff908116151560c08c01819052600784015460e08d018190526008850154831615156101008e0181905260098601546101208f0152600a86015490931615156101408e0152600b90940154610160909c018c9052949c919a9399509397509095509193509150565b600260005414156112da576040805162461bcd60e51b815260206004820152601f6024820152600080516020615d25833981519152604482015290519081900360640190fd5b60026000556112e76147fe565b6112ef615b7f565b6001600160a01b0380851660009081526008602090815260408083208784528252918290208251610100810184528154909416845260018101805484518185028101850190955280855291938584019390929083018282801561137b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161135d575b5050509183525050600282015460208201526003820154604082015260048201546060820152600582015460ff8082161515608084015261010090910416151560a082015260069091015460c09091015280519091506001600160a01b0316611419576040805162461bcd60e51b81526020600482015260166024820152600080516020615d45833981519152604482015290519081900360640190fd5b8060a0015115611486576114358160200151826080015161372a565b611486576040805162461bcd60e51b815260206004820152601f60248201527f4f423a20696e76616c696420707269636520666f7220657865637574696f6e00604482015290519081900360640190fd5b6001600160a01b0384166000908152600860209081526040808320868452909152812080546001600160a01b0319168155906114c56001830182615bd1565b50600060028201819055600382018190556004820181905560058201805461ffff1916905560069091018190556114ff908590859061484f565b600e54604082015160208301518051611547936001600160a01b031692919060009061152757fe5b60200260200101516001600160a01b03166148709092919063ffffffff16565b600b54602082015180516000926001600160a01b03169190600019810190811061156d57fe5b60200260200101516001600160a01b031614801561158c57508160c001515b156115b9576115a482602001518360600151306148c7565b90506115b48183600001516149fc565b6115d3565b6115d08260200151836060015184600001516148c7565b90505b6115e18260e00151846149fc565b846001600160a01b03167f7e1fe496989eea92b738a562dbf9c0ae6aa6fcf3f1ef09e95ee4f7603721706b858460200151856040015186606001518688608001518960a001518a60c001518b60e00151604051808a8152602001806020018981526020018881526020018781526020018681526020018515158152602001841515815260200183815260200182810382528a818151815260200191508051906020019060200280838360005b838110156116a557818101518382015260200161168d565b505050509050019a505050505050505050505060405180910390a250506001600055505050565b6116d4614a79565b601155565b600083838360405160200180846001600160a01b031660601b815260140183815260200182600281111561170957fe5b60f81b815260010193505050506040516020818303038152906040528051906020012060001c90505b9392505050565b6002600054141561177f576040805162461bcd60e51b815260206004820152601f6024820152600080516020615d25833981519152604482015290519081900360640190fd5b600260005561178c6147fe565b611794615b1b565b506001600160a01b03808416600090815260066020818152604080842087855282529283902083516101808101855281548616808252600183015487169382019390935260028201548616948101949094526003810154606085015260048101549094166080840152600584015460a08401529083015460ff908116151560c0840152600784015460e08401526008840154811615156101008401526009840154610120840152600a840154161515610140830152600b9092015461016082015290611895576040805162461bcd60e51b81526020600482015260166024820152600080516020615d45833981519152604482015290519081900360640190fd5b60006118b78261010001518360e0015184608001518560c001511560016124ab565b506001600160a01b0386166000908152600660208181526040808420898552909152822080546001600160a01b031990811682556001820180548216905560028083018054831690556003830185905560048301805490921690915560058201849055918101805460ff19908116909155600782018490556008820180548216905560098201849055600a820180549091169055600b0191909155909150611962908690869061484f565b600d5482516020808501516080860151606087015160a088015160c089015160408051632662166b60e01b81526001600160a01b0398891660048201529588166024870152938716604486015260648501929092526084840152151560a48301523060c4830152516000949390931692632662166b9260e48084019391929182900301818787803b1580156119f657600080fd5b505af1158015611a0a573d6000803e3d6000fd5b505050506040513d6020811015611a2057600080fd5b505160408401519091506001600160a01b031615611a7357600e546020840151611a57916001600160a01b03918216911683614870565b611a708360200151846040015185610120015130614ac8565b90505b82610140015115611a9157611a8c818460000151614bb4565b611aae565b82516040840151611aae916001600160a01b039091169083614870565b611abd836101600151856149fc565b82600001516001600160a01b03167f9a382661d6573da86db000471303be6f0b2b1bb66089b08e3c16a85d7b6e94f8868560200151866060015187608001518860a001518960c001518a60e001518b61010001518c61016001518c604051808b81526020018a6001600160a01b03168152602001898152602001886001600160a01b03168152602001878152602001861515815260200185815260200184151581526020018381526020018281526020019a505050505050505050505060405180910390a25050600160005550505050565b600a546001600160a01b031681565b60026000541415611be4576040805162461bcd60e51b815260206004820152601f6024820152600080516020615d25833981519152604482015290519081900360640190fd5b6002600081905588511480611bfa575087516003145b611c46576040805162461bcd60e51b815260206004820152601860248201527709e847440d2dcecc2d8d2c840bee0c2e8d05cd8cadccee8d60431b604482015290519081900360640190fd5b87600189510381518110611c5657fe5b60200260200101516001600160a01b031688600081518110611c7457fe5b60200260200101516001600160a01b03161415611ccc576040805162461bcd60e51b815260206004820152601160248201527009e847440d2dcecc2d8d2c840bee0c2e8d607b1b604482015290519081900360640190fd5b600c5488516001600160a01b03909116908990600090611ce857fe5b60200260200101516001600160a01b031614158015611d375750600c5488516001600160a01b039091169089906000198101908110611d2357fe5b60200260200101516001600160a01b031614155b611d7c576040805162461bcd60e51b815260206004820152601160248201527027a11d1034b73b30b634b2103a37b5b2b760791b604482015290519081900360640190fd5b60008711611dc9576040805162461bcd60e51b815260206004820152601560248201527427a11d1034b73b30b634b2102fb0b6b7bab73a24b760591b604482015290519081900360640190fd5b601054831015611e0e576040805162461bcd60e51b815260206004820152601e6024820152600080516020615dc5833981519152604482015290519081900360640190fd5b611e16614c4f565b8115611efd57600b5488516001600160a01b03909116908990600090611e3857fe5b60200260200101516001600160a01b031614611e9b576040805162461bcd60e51b815260206004820152601e60248201527f4f423a206f6e6c79207765746820636f756c6420626520777261707065640000604482015290519081900360640190fd5b611ea58388614cb9565b3414611ef8576040805162461bcd60e51b815260206004820152601f60248201527f4f423a20696e636f72726563742076616c7565207472616e7366657272656400604482015290519081900360640190fd5b611fe7565b823414611f3b5760405162461bcd60e51b8152600401808060200182810382526027815260200180615cfe6027913960400191505060405180910390fd5b600d5488516001600160a01b0390911690631b827878908a90600090611f5d57fe5b602002602001015133308b6040518563ffffffff1660e01b815260040180856001600160a01b03168152602001846001600160a01b03168152602001836001600160a01b03168152602001828152602001945050505050600060405180830381600087803b158015611fce57600080fd5b505af1158015611fe2573d6000803e3d6000fd5b505050505b611ff7338989898989878a614d13565b50506001600055505050505050565b600080600080600080600080600061201c615b1b565b505050506001600160a01b0397881660009081526006602081815260408084209a845299815291899020895161018081018b5281548c16815260018201548c1693810184905260028201548c169a81018b90526003820154606082018190526004830154909c1660808201819052600583015460a083018190529383015460ff908116151560c08401819052600785015460e0850181905260088601548316151561010086018190526009870154610120870152600a8701549093161515610140860152600b90950154610160909401849052959e9c9d9c919b509399509397509095509093509150565b6004602081815260009384526040808520909152918352912080546001820154600283015460038401549484015460058501546006860154600787015460088801546009909801546001600160a01b03978816999688169895979687169690941694929360ff928316939192909116908a565b60125460ff1681565b600b546001600160a01b031681565b600260005414156121d8576040805162461bcd60e51b815260206004820152601f6024820152600080516020615d25833981519152604482015290519081900360640190fd5b60026000556121e5615bf2565b5033600090815260046020818152604080842085855282529283902083516101408101855281546001600160a01b039081168083526001840154821694830194909452600283015495820195909552600382015485166060820152928101549093166080830152600583015460a0830152600683015460ff908116151560c0840152600784015460e08401526008840154161515610100830152600990920154610120820152906122cb576040805162461bcd60e51b81526020600482015260166024820152600080516020615d45833981519152604482015290519081900360640190fd5b336000818152600460208181526040808420878552909152822080546001600160a01b0319908116825560018083018054831690556002830185905560038301805483169055928201805490911690556005810183905560068101805460ff19908116909155600782018490556008820180549091169055600901919091556123569190849061484f565b600b5460208201516001600160a01b039081169116141561239b576123966123908260400151836101200151614cb990919063ffffffff16565b336149fc565b6123d0565b6123c133826040015183602001516001600160a01b03166148709092919063ffffffff16565b6123d0816101200151336149fc565b80600001516001600160a01b03167fd500f34e0ec655b7614ae42e1d9c666d5e4dde909a1297829f8c5ecf00805d328383602001518460400151856060015186608001518760a001518860c001518960e001518a61010001518b6101200151604051808b81526020018a6001600160a01b03168152602001898152602001886001600160a01b03168152602001876001600160a01b03168152602001868152602001851515815260200184815260200183151581526020018281526020019a505050505050505050505060405180910390a250506001600055565b60008060008461253357600e54604080516340d3096b60e11b81526001600160a01b038981166004830152915191909216916381a612d6916024808301926020929190829003018186803b15801561250257600080fd5b505afa158015612516573d6000803e3d6000fd5b505050506040513d602081101561252c57600080fd5b50516125ad565b600e5460408051637092736960e11b81526001600160a01b0389811660048301529151919092169163e124e6d2916024808301926020929190829003018186803b15801561258057600080fd5b505afa158015612594573d6000803e3d6000fd5b505050506040513d60208110156125aa57600080fd5b50515b90506000886125be578782106125c2565b8782115b9050841561261c578061261c576040805162461bcd60e51b815260206004820152601f60248201527f4f423a20696e76616c696420707269636520666f7220657865637574696f6e00604482015290519081900360640190fd5b909890975095505050505050565b60105481565b612638614a79565b600f80546001600160a01b0319166001600160a01b0392909216919091179055565b60086020908152600092835260408084209091529082529020805460028201546003830154600484015460058501546006909501546001600160a01b039094169492939192909160ff808316926101009004169087565b60005b83518110156126e1576126d98482815181106126cc57fe5b6020026020010151614369565b6001016126b4565b5060005b82518110156127125761270a8382815181106126fd57fe5b6020026020010151612192565b6001016126e5565b5060005b81518110156127435761273b82828151811061272e57fe5b6020026020010151612e90565b600101612716565b50505050565b60115481565b60038054600091606091908290820267ffffffffffffffff8111801561277457600080fd5b5060405190808252806020026020018201604052801561279e578160200160208202803683370190505b50905060008215612c805760006127b56001614f1e565b90505b6127c3600182614f2c565b15612c7e576127d0615c46565b6127db600183614f37565b91506000905080826040015160028111156127f257fe5b141561290957612800615b7f565b82516001600160a01b0390811660009081526008602090815260408083208288015184528252918290208251610100810184528154909416845260018101805484518185028101850190955280855291938584019390929083018282801561289157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612873575b505050918352505060028201546020808301919091526003830154604083015260048301546060830152600583015460ff808216151560808086019190915261010090920416151560a084015260069093015460c090920191909152820151908201519192506129009161372a565b15915050612b90565b60018260400151600281111561291b57fe5b14156129f357612929615bf2565b5081516001600160a01b039081166000908152600460208181526040808420828801518552825280842081516101408101835281548716815260018201548716938101939093526002810154918301919091526003810154851660608301529182015490931660808401819052600582015460a0850152600682015460ff908116151560c08601819052600784015460e087018190526008850154909216151561010087018190526009909401546101208701526129e9949192916124ab565b9250612b90915050565b600282604001516002811115612a0557fe5b1415612b9057612a13615b1b565b5081516001600160a01b03908116600090815260066020818152604080842082880151855282528084208151610180810183528154871680825260018301548816948201859052600283015488168285015260038301546060830152600480840154891660808401819052600585015460a08501529684015460ff908116151560c08501819052600786015460e0860152600886015482161515610100808701919091526009870154610120870152600a8701549092161515610140860152600b90950154610160850152600e548651634a3f088d60e01b815292830193909352602482019690965260448101969096526064860192909252915191951692634a3f088d926084808301939192829003018186803b158015612b3457600080fd5b505afa158015612b48573d6000803e3d6000fd5b505050506040513d610100811015612b5f57600080fd5b505190508015612b8d57612b898261010001518360e0015184608001518560c001511560006124ab565b9350505b50505b8015612c69578815612bbd575050604080516000815260208101909152600196509450612d229350505050565b8160000151858560030281518110612bd157fe5b60200260200101906001600160a01b031690816001600160a01b0316815250508160200151858560030260010181518110612c0857fe5b60200260200101906001600160a01b031690816001600160a01b03168152505081604001516002811115612c3857fe5b858560030260020181518110612c4a57fe5b6001600160a01b03909216602092830291909101909101526001909301925b50612c779050600182614fc8565b90506127b8565b505b60608160030267ffffffffffffffff81118015612c9c57600080fd5b50604051908082528060200260200182016040528015612cc6578160200160208202803683370190505b50905060005b82600302811015612d1757838181518110612ce357fe5b6020026020010151828281518110612cf757fe5b6001600160a01b0390921660209283029190910190910152600101612ccc565b509015159450925050505b915091565b6c0c9f2c9cd04674edea4000000081565b60026000541415612d7e576040805162461bcd60e51b815260206004820152601f6024820152600080516020615d25833981519152604482015290519081900360640190fd5b60026000908155338152600460209081526040808320878452909152902080546001600160a01b0316612de6576040805162461bcd60e51b81526020600482015260166024820152600080516020615d45833981519152604482015290519081900360640190fd5b6007810183905560088101805483151560ff19909116811790915560058201859055600382015460048301546006840154604080518a81526001600160a01b039485166020820152929093168284015260ff16151560608201526080810187905260a0810186905260c08101929092525133917f0a0360dd5c354235bbf8d386ba3b24ef8134088e0785677de1504df219d9149a919081900360e00190a250506001600055505050565b60026000541415612ed6576040805162461bcd60e51b815260206004820152601f6024820152600080516020615d25833981519152604482015290519081900360640190fd5b6002600055612ee3615b1b565b5033600090815260066020818152604080842085855282529283902083516101808101855281546001600160a01b03908116808352600184015482169483019490945260028301548116958201959095526003820154606082015260048201549094166080850152600581015460a08501529182015460ff908116151560c0850152600783015460e08501526008830154811615156101008501526009830154610120850152600a830154161515610140840152600b90910154610160830152612fe2576040805162461bcd60e51b81526020600482015260166024820152600080516020615d45833981519152604482015290519081900360640190fd5b336000818152600660208181526040808420878552909152822080546001600160a01b031990811682556001820180548216905560028083018054831690556003830185905560048301805490921690915560058201849055918101805460ff19908116909155600782018490556008820180548216905560098201849055600a820180549091169055600b019190915561307f9190849061484f565b61308e816101600151336149fc565b80600001516001600160a01b03167f1154174c82984656b028c8021671988f60a346497e56fe02554761184f82a075838360200151846060015185608001518660a001518760c001518860e001518961010001518a6101600151604051808a8152602001896001600160a01b03168152602001888152602001876001600160a01b0316815260200186815260200185151581526020018481526020018315158152602001828152602001995050505050505050505060405180910390a250506001600055565b6002600054141561319a576040805162461bcd60e51b815260206004820152601f6024820152600080516020615d25833981519152604482015290519081900360640190fd5b60026000908155338152600660209081526040808320888452909152902080546001600160a01b0316613202576040805162461bcd60e51b81526020600482015260166024820152600080516020615d45833981519152604482015290519081900360640190fd5b6007810183905560088101805483151560ff1990911681179091556005820185905560038201869055600182015460048301546006840154604080518b81526001600160a01b0394851660208201528082018b90529290931660608301526080820188905260ff16151560a082015260c0810186905260e08101929092525133917f75781255bc71c83f89f29e5a2599f2c174a562d2cd8f2e818a47f132e728049891908190036101000190a25050600160005550505050565b600f546001600160a01b031681565b670de0b6b3a764000081565b60056020526000908152604090205481565b6002600054141561332f576040805162461bcd60e51b815260206004820152601f6024820152600080516020615d25833981519152604482015290519081900360640190fd5b600260005561333c614c4f565b601054821015613381576040805162461bcd60e51b815260206004820152601e6024820152600080516020615dc5833981519152604482015290519081900360640190fd5b801561346857600b548b516001600160a01b03909116908c906000906133a357fe5b60200260200101516001600160a01b031614613406576040805162461bcd60e51b815260206004820152601e60248201527f4f423a206f6e6c79207765746820636f756c6420626520777261707065640000604482015290519081900360640190fd5b613410828b614cb9565b3414613463576040805162461bcd60e51b815260206004820152601f60248201527f4f423a20696e636f72726563742076616c7565207472616e7366657272656400604482015290519081900360640190fd5b613552565b8134146134a65760405162461bcd60e51b8152600401808060200182810382526027815260200180615cfe6027913960400191505060405180910390fd5b600d548b516001600160a01b0390911690631b827878908d906000906134c857fe5b602002602001015133308e6040518563ffffffff1660e01b815260040180856001600160a01b03168152602001846001600160a01b03168152602001836001600160a01b03168152602001828152602001945050505050600060405180830381600087803b15801561353957600080fd5b505af115801561354d573d6000803e3d6000fd5b505050505b60008b60018d51038151811061356457fe5b60200260200101519050600060018d51111561362257816001600160a01b03168d60008151811061359157fe5b60200260200101516001600160a01b031614156135e9576040805162461bcd60e51b815260206004820152601160248201527009e847440d2dcecc2d8d2c840bee0c2e8d607b1b604482015290519081900360640190fd5b613610600e60009054906101000a90046001600160a01b03168d8f60008151811061152757fe5b61361b8d8b306148c7565b9050613625565b508a5b600e5460408051630a48d5a960e01b81526001600160a01b0385811660048301526024820185905291516000939290921691630a48d5a991604480820192602092909190829003018186803b15801561367d57600080fd5b505afa158015613691573d6000803e3d6000fd5b505050506040513d60208110156136a757600080fd5b5051601154909150811015613703576040805162461bcd60e51b815260206004820152601b60248201527f4f423a20696e73756666696369656e7420636f6c6c61746572616c0000000000604482015290519081900360640190fd5b506137163383838b8f8e8d8d8d8d615019565b505060016000555050505050505050505050565b600082516002148061373d575082516003145b613789576040805162461bcd60e51b815260206004820152601860248201527709e847440d2dcecc2d8d2c840bee0c2e8d05cd8cadccee8d60431b604482015290519081900360640190fd5b60008360008151811061379857fe5b602002602001015190506000846001865103815181106137b457fe5b602090810291909101810151600e54604080516340d3096b60e11b81526001600160a01b0387811660048301529151939550600094859492909316926381a612d692602480840193829003018186803b15801561381057600080fd5b505afa158015613824573d6000803e3d6000fd5b505050506040513d602081101561383a57600080fd5b5051600e5460408051637092736960e11b81526001600160a01b038781166004830152915193955091169163e124e6d291602480820192602092909190829003018186803b15801561388b57600080fd5b505afa15801561389f573d6000803e3d6000fd5b505050506040513d60208110156138b557600080fd5b5051905060006138dc836138d6846c0c9f2c9cd04674edea40000000615244565b9061529d565b8710955050505050505b92915050565b60026000541415613932576040805162461bcd60e51b815260206004820152601f6024820152600080516020615d25833981519152604482015290519081900360640190fd5b60026000908155338152600860209081526040808320878452909152902080546001600160a01b031661399a576040805162461bcd60e51b81526020600482015260166024820152600080516020615d45833981519152604482015290519081900360640190fd5b838160030181905550828160040181905550818160050160006101000a81548160ff021916908315150217905550336001600160a01b03167fa7f9f4a25eb76f5ec01b1a429d95d6a00833f0f137c88827c58799a1c1ff0dfe868360010184600201548888888860050160019054906101000a900460ff1689600601546040518089815260200180602001888152602001878152602001868152602001851515815260200184151581526020018381526020018281038252898181548152602001915080548015613a9457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311613a76575b5050995050505050505050505060405180910390a250506001600055505050565b613abd614a79565b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000806000806000806000613af5615b7f565b6001600160a01b03808d1660009081526008602090815260408083208f845282529182902082516101008101845281549094168452600181018054845181850281018501909552808552919385840193909290830182828015613b8157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311613b63575b505050918352505060028201546020808301919091526003830154604083015260048301546060830152600583015460ff8082161515608085015261010090910416151560a083015260069092015460c09091015281015151909150613be8576000613c02565b8060200151600081518110613bf957fe5b60200260200101515b600182602001515111613c16576000613c30565b8160200151600181518110613c2757fe5b60200260200101515b600283602001515111613c44576000613c5e565b8260200151600281518110613c5557fe5b60200260200101515b8360400151846060015185608001518660a001518760c001518860e00151995099509950995099509950995099509950509295985092959850929598565b60026000541415613ce2576040805162461bcd60e51b815260206004820152601f6024820152600080516020615d25833981519152604482015290519081900360640190fd5b6002600055613cef6147fe565b613cf7615bf2565b506001600160a01b038084166000908152600460208181526040808420878552825292839020835161014081018552815486168082526001830154871693820193909352600282015494810194909452600381015485166060850152918201549093166080830152600581015460a0830152600681015460ff908116151560c0840152600782015460e084015260088201541615156101008301526009015461012082015290613ddc576040805162461bcd60e51b81526020600482015260166024820152600080516020615d45833981519152604482015290519081900360640190fd5b6000613dfd8261010001518360e0015184608001518560c0015160016124ab565b506001600160a01b0386166000908152600460208181526040808420898552909152822080546001600160a01b0319908116825560018083018054831690556002830185905560038301805483169055928201805490911690556005810183905560068101805460ff1990811690915560078201849055600882018054909116905560090191909155909150613e96908690869061484f565b600e5460408301516020840151613ebb926001600160a01b0391821692911690614870565b81606001516001600160a01b031682602001516001600160a01b031614613f93576040805160028082526060808301845292602083019080368337019050509050826020015181600081518110613f0e57fe5b60200260200101906001600160a01b031690816001600160a01b031681525050826060015181600181518110613f4057fe5b60200260200101906001600160a01b031690816001600160a01b0316815250506000613f6e826000306148c7565b600e546060860151919250613f90916001600160a01b03908116911683614870565b50505b600d5482516060840151608085015160a086015160c087015160408051630f8ee8bb60e11b81526001600160a01b03968716600482015294861660248601529285166044850152606484019190915215156084830152519190921691631f1dd1769160a480830192600092919082900301818387803b15801561401557600080fd5b505af1158015614029573d6000803e3d6000fd5b5050505061403c826101200151846149fc565b81600001516001600160a01b03167f7fb1c74d1ea6aa1c9c585e17ce8274c8ff98745e85e7459b73f87d784494f58e8584602001518560400151866060015187608001518860a001518960c001518a60e001518b61010001518c61012001518c604051808c81526020018b6001600160a01b031681526020018a8152602001896001600160a01b03168152602001886001600160a01b03168152602001878152602001861515815260200185815260200184151581526020018381526020018281526020019b50505050505050505050505060405180910390a250506001600055505050565b6000806000806000806000806000614138615bf2565b5050506001600160a01b03808a1660009081526004602081815260408084208d855282529283902083516101408101855281548616815260018201548616928101839052600282015494810185905260038201548616606082018190529382015490951660808601819052600582015460a08701819052600683015460ff908116151560c08901819052600785015460e08a01819052600886015490921615156101008a01819052600990950154610120909901899052949e50959c50939a5098509196509450909250909295985092959850929598565b60076020526000908152604090205481565b61422a614a79565b60125460ff161561426e576040805162461bcd60e51b815260206004820152600960248201526827a11d1032b93937b960b91b604482015290519081900360640190fd5b6012805460ff19166001179055600d80546001600160a01b039788166001600160a01b031991821617909155600e805496881696821696909617909555600b805494871694861694909417909355600c8054929095169190931617909255601055601155565b60035481565b600c546001600160a01b031681565b6006602081815260009384526040808520909152918352912080546001820154600283015460038401546004850154600586015496860154600787015460088801546009890154600a8a0154600b909a01546001600160a01b03998a169b988a169a978a16999698969095169660ff94851695939492831693919216908c565b600260005414156143af576040805162461bcd60e51b815260206004820152601f6024820152600080516020615d25833981519152604482015290519081900360640190fd5b60026000556143bc615b7f565b33600090815260086020908152604080832085845282529182902082516101008101845281546001600160a01b031681526001820180548551818602810186019096528086529194929385810193929083018282801561444557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311614427575b5050509183525050600282015460208201526003820154604082015260048201546060820152600582015460ff8082161515608084015261010090910416151560a082015260069091015460c09091015280519091506001600160a01b03166144e3576040805162461bcd60e51b81526020600482015260166024820152600080516020615d45833981519152604482015290519081900360640190fd5b336000908152600860209081526040808320858452909152812080546001600160a01b0319168155906145196001830182615bd1565b50600060028201819055600382018190556004820181905560058201805461ffff191690556006909101819055614553903390849061484f565b600b54602082015180516001600160a01b039092169160009061457257fe5b60200260200101516001600160a01b031614156145ac576145a761239082604001518360e00151614cb990919063ffffffff16565b6145d4565b6145c6338260400151836020015160008151811061152757fe5b6145d48160e00151336149fc565b336001600160a01b03167fefd66d4f9c2f880c70aedeb5b26a44fb474cea07e5d6c533f2d27c303d5d94538383602001518460400151856060015186608001518760a001518860c001518960e00151604051808981526020018060200188815260200187815260200186815260200185151581526020018415158152602001838152602001828103825289818151815260200191508051906020019060200280838360005b83811015614691578181015183820152602001614679565b50505050905001995050505050505050505060405180910390a250506001600055565b600d546001600160a01b031681565b60026000541415614709576040805162461bcd60e51b815260206004820152601f6024820152600080516020615d25833981519152604482015290519081900360640190fd5b6002600055614716614c4f565b601054341161475a576040805162461bcd60e51b815260206004820152601e6024820152600080516020615dc5833981519152604482015290519081900360640190fd5b80156147be57600b546001600160a01b038881169116146147be576040805162461bcd60e51b815260206004820152601960248201527827a11d1034b73b30b634b2102fb932b1b2b4bb32aa37b5b2b760391b604482015290519081900360640190fd5b6147d1338989898e8e8b8b8b8b8b6152df565b505060016000555050505050505050565b600e546001600160a01b031681565b6147f9614a79565b601055565b600f546001600160a01b0316331461484d576040805162461bcd60e51b815260206004820152600d60248201526c27a11d103337b93134b23232b760991b604482015290519081900360640190fd5b565b600061485c8484846116d9565b905061486960018261553a565b5050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526148c29084906155d7565b505050565b600083516002141561490e57614907846000815181106148e357fe5b6020026020010151856001815181106148f857fe5b60200260200101518585614ac8565b9050611732565b8351600314156149b457600061494f8560008151811061492a57fe5b60200260200101518660018151811061493f57fe5b6020026020010151600030614ac8565b9050614978600e60009054906101000a90046001600160a01b0316828760018151811061152757fe5b6149ac8560018151811061498857fe5b60200260200101518660028151811061499d57fe5b60200260200101518686614ac8565b915050611732565b6040805162461bcd60e51b815260206004820152601860248201527709e847440d2dcecc2d8d2c840bee0c2e8d05cd8cadccee8d60431b604482015290519081900360640190fd5b600b5460408051632e1a7d4d60e01b81526004810185905290516001600160a01b0390921691632e1a7d4d9160248082019260009290919082900301818387803b158015614a4957600080fd5b505af1158015614a5d573d6000803e3d6000fd5b50614a75925050506001600160a01b03821683615688565b5050565b600a546001600160a01b0316331461484d576040805162461bcd60e51b815260206004820152600d60248201526c27a11d103337b93134b23232b760991b604482015290519081900360640190fd5b600e5460408051634998b10960e11b81526001600160a01b03878116600483015286811660248301528481166044830152915160009384931691639331621291606480830192602092919082900301818787803b158015614b2857600080fd5b505af1158015614b3c573d6000803e3d6000fd5b505050506040513d6020811015614b5257600080fd5b5051905083811015614bab576040805162461bcd60e51b815260206004820152601a60248201527f4f423a20696e73756666696369656e7420616d6f756e744f7574000000000000604482015290519081900360640190fd5b95945050505050565b600b5460408051632e1a7d4d60e01b81526004810185905290516001600160a01b0390921691632e1a7d4d9160248082019260009290919082900301818387803b158015614c0157600080fd5b505af1158015614c15573d6000803e3d6000fd5b50506040516001600160a01b038416925084156108fc02915084906000818181858888f193505050501580156148c2573d6000803e3d6000fd5b341561484d57600b60009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b158015614ca557600080fd5b505af1158015614869573d6000803e3d6000fd5b600082820183811015611732576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b038816600090815260096020526040902054614d34615b7f565b6040518061010001604052808b6001600160a01b031681526020018a815260200189815260200188815260200187815260200186151581526020018515158152602001848152509050614d91600183614cb990919063ffffffff16565b6001600160a01b038b8116600090815260096020908152604080832094909455600881528382208683528152929020835181546001600160a01b03191692169190911781558282015180518493614def926001850192910190615c64565b5060408201516002820155606082015160038201556080820151600482015560a082015160058201805460c085015115156101000261ff001993151560ff19909216919091179290921691909117905560e090910151600690910155614e578a83600061576d565b896001600160a01b03167fdf06bb56ffc4029dc0b62b68bb5bbadea93a38b530cefc9b81afb742a6555d88838b8b8b8b8b8b8b604051808981526020018060200188815260200187815260200186815260200185151581526020018415158152602001838152602001828103825289818151815260200191508051906020019060200280838360005b83811015614ef8578181015183820152602001614ee0565b50505050905001995050505050505050505060405180910390a250505050505050505050565b60006138e682600019614fc8565b600191909101541190565b6000614f41615c46565b836001018381548110614f5057fe5b600091825260208083206002928302015480845287825260409384902084516060810186526001820180546001600160a01b0316825282860154948201949094526003909101549196509391929184019160ff90911690811115614fb057fe5b6002811115614fbb57fe5b8152505090509250929050565b60010160005b6001830154821080156150035750826001018281548110614feb57fe5b600091825260209091206001600290920201015460ff165b1561501357600190910190614fce565b50919050565b6001600160a01b038a1660009081526005602052604090205461503a615bf2565b6040518061014001604052808d6001600160a01b031681526020018c6001600160a01b031681526020018b81526020018a6001600160a01b03168152602001896001600160a01b03168152602001888152602001871515815260200186815260200185151581526020018481525090506150be600183614cb990919063ffffffff16565b6001600160a01b038d81166000908152600560208181526040808420959095556004808252858420888552825292859020865181546001600160a01b031990811691871691909117825591870151600180830180548516928816929092179091559587015160028201556060870151600382018054841691871691909117905560808701519381018054909216939094169290921790915560a08401519082015560c083015160068201805460ff1990811692151592909217905560e084015160078301556101008401516008830180549092169015151790556101208301516009909101556151b1908d90849061576d565b604080518381526001600160a01b038d811660208301528183018d90528b811660608301528a8116608083015260a082018a905288151560c083015260e0820188905286151561010083015261012082018690529151918e16917fb27b9afe3043b93788c40cfc3cc73f5d928a2e40f3ba01820b246426de8fa1b9918190036101400190a2505050505050505050505050565b600082615253575060006138e6565b8282028284828161526057fe5b04146117325760405162461bcd60e51b8152600401808060200182810382526021815260200180615de56021913960400191505060405180910390fd5b600061173283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506157c8565b6001600160a01b038b16600090815260076020526040902054615300615b1b565b6040518061018001604052808e6001600160a01b031681526020018d6001600160a01b031681526020018c6001600160a01b031681526020018b81526020018a6001600160a01b03168152602001898152602001881515815260200187815260200186151581526020018581526020018415158152602001348152509050615392600183614cb990919063ffffffff16565b6001600160a01b03808f166000908152600760208181526040808420959095556006808252858420888552825292859020865181549086166001600160a01b0319918216178255918701516001820180549187169184169190911790559486015160028087018054928716928416929092179091556060870151600387015560808701516004870180549190961692169190911790935560a0850151600585015560c0850151918401805492151560ff1993841617905560e0850151908401556101008401516008840180549115159183169190911790556101208401516009840155610140840151600a8401805491151591909216179055610160830151600b909201919091556154a7908e90849061576d565b604080518381526001600160a01b038e811660208301528d811682840152606082018d90528b8116608083015260a082018b905289151560c083015260e08201899052871515610100830152346101208301529151918f16917fd2ee0e9806d1126080fe9778c80db9b118bfc117d4276993f5ae21a04624a051918190036101400190a250505050505050505050505050565b600081815260208390526040812054806155585760009150506138e6565b6000838152602085905260408120818155600180820180546001600160a01b03191690556002820192909255600301805460ff19169055808501805460001984019081106155a257fe5b60009182526020909120600291820201600101805460ff19169215159290921790915593909301805460001901905592915050565b606061562c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661586a9092919063ffffffff16565b8051909150156148c25780806020019051602081101561564b57600080fd5b50516148c25760405162461bcd60e51b815260040180806020018281038252602a815260200180615e06602a913960400191505060405180910390fd5b804710156156dd576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b6040516000906001600160a01b0384169083908381818185875af1925050503d8060008114615728576040519150601f19603f3d011682016040523d82523d6000602084013e61572d565b606091505b50509050806148c25760405162461bcd60e51b815260040180806020018281038252603a815260200180615d65603a913960400191505060405180910390fd5b600061577a8484846116d9565b9050615784615c46565b6040518060600160405280866001600160a01b031681526020018581526020018460028111156157b057fe5b905290506157c060018383615881565b505050505050565b600081836158545760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015615819578181015183820152602001615801565b50505050905090810190601f1680156158465780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161586057fe5b0495945050505050565b60606158798484600085615953565b949350505050565b60008281526020848152604080832080548551600180840180546001600160a01b0319166001600160a01b0390931692909217825594870151600280850191909155938701516003909301805492958895929493919260ff199092169184908111156158e957fe5b02179055505081159050615901576001915050611732565b506001808501805491820180825560008681526020889052604090208190558591908390811061592d57fe5b600091825260208220600291820201929092559086018054600101905591506117329050565b6060824710156159945760405162461bcd60e51b8152600401808060200182810382526026815260200180615d9f6026913960400191505060405180910390fd5b61599d85615aaf565b6159ee576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310615a2d5780518252601f199092019160209182019101615a0e565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114615a8f576040519150601f19603f3d011682016040523d82523d6000602084013e615a94565b606091505b5091509150615aa4828286615ab5565b979650505050505050565b3b151590565b60608315615ac4575081611732565b825115615ad45782518084602001fd5b60405162461bcd60e51b8152602060048201818152845160248401528451859391928392604401919085019080838360008315615819578181015183820152602001615801565b6040805161018081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081019190915290565b60405180610100016040528060006001600160a01b0316815260200160608152602001600081526020016000815260200160008152602001600015158152602001600015158152602001600081525090565b5080546000825590600052602060002090810190615bef9190615cc9565b50565b6040805161014081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081019190915290565b60408051606081018252600080825260208201819052909182015290565b828054828255906000526020600020908101928215615cb9579160200282015b82811115615cb957825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190615c84565b50615cc5929150615cde565b5090565b5b80821115615cc55760008155600101615cca565b5b80821115615cc55780546001600160a01b0319168155600101615cdf56fe4f423a20696e636f727265637420657865637574696f6e20666565207472616e736665727265645265656e7472616e637947756172643a207265656e7472616e742063616c6c004f423a206e6f6e2d6578697374656e74206f7264657200000000000000000000416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c4f423a20696e73756666696369656e7420657865637574696f6e206665650000536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a164736f6c634300060c000a",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 23501,
        "contract": "contracts/core/OrderBook.sol:OrderBook",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 3886,
        "contract": "contracts/core/OrderBook.sol:OrderBook",
        "label": "orderList",
        "offset": 0,
        "slot": "1",
        "type": "t_struct(itmap)23258_storage"
      },
      {
        "astId": 3959,
        "contract": "contracts/core/OrderBook.sol:OrderBook",
        "label": "increaseOrders",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(IncreaseOrder)3910_storage))"
      },
      {
        "astId": 3963,
        "contract": "contracts/core/OrderBook.sol:OrderBook",
        "label": "increaseOrdersIndex",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 3969,
        "contract": "contracts/core/OrderBook.sol:OrderBook",
        "label": "decreaseOrders",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(DecreaseOrder)3935_storage))"
      },
      {
        "astId": 3973,
        "contract": "contracts/core/OrderBook.sol:OrderBook",
        "label": "decreaseOrdersIndex",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 3979,
        "contract": "contracts/core/OrderBook.sol:OrderBook",
        "label": "swapOrders",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(SwapOrder)3953_storage))"
      },
      {
        "astId": 3983,
        "contract": "contracts/core/OrderBook.sol:OrderBook",
        "label": "swapOrdersIndex",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 3985,
        "contract": "contracts/core/OrderBook.sol:OrderBook",
        "label": "gov",
        "offset": 0,
        "slot": "10",
        "type": "t_address"
      },
      {
        "astId": 3987,
        "contract": "contracts/core/OrderBook.sol:OrderBook",
        "label": "weth",
        "offset": 0,
        "slot": "11",
        "type": "t_address"
      },
      {
        "astId": 3989,
        "contract": "contracts/core/OrderBook.sol:OrderBook",
        "label": "usdq",
        "offset": 0,
        "slot": "12",
        "type": "t_address"
      },
      {
        "astId": 3991,
        "contract": "contracts/core/OrderBook.sol:OrderBook",
        "label": "router",
        "offset": 0,
        "slot": "13",
        "type": "t_address"
      },
      {
        "astId": 3993,
        "contract": "contracts/core/OrderBook.sol:OrderBook",
        "label": "vault",
        "offset": 0,
        "slot": "14",
        "type": "t_address"
      },
      {
        "astId": 3995,
        "contract": "contracts/core/OrderBook.sol:OrderBook",
        "label": "orderExecutor",
        "offset": 0,
        "slot": "15",
        "type": "t_address"
      },
      {
        "astId": 3997,
        "contract": "contracts/core/OrderBook.sol:OrderBook",
        "label": "minExecutionFee",
        "offset": 0,
        "slot": "16",
        "type": "t_uint256"
      },
      {
        "astId": 3999,
        "contract": "contracts/core/OrderBook.sol:OrderBook",
        "label": "minPurchaseTokenAmountUsd",
        "offset": 0,
        "slot": "17",
        "type": "t_uint256"
      },
      {
        "astId": 4002,
        "contract": "contracts/core/OrderBook.sol:OrderBook",
        "label": "isInitialized",
        "offset": 0,
        "slot": "18",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(KeyFlag)23248_storage)dyn_storage": {
        "base": "t_struct(KeyFlag)23248_storage",
        "encoding": "dynamic_array",
        "label": "struct KeyFlag[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(OrderType)23231": {
        "encoding": "inplace",
        "label": "enum OrderType",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_struct(DecreaseOrder)3935_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct OrderBook.DecreaseOrder))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(DecreaseOrder)3935_storage)"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_struct(IncreaseOrder)3910_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct OrderBook.IncreaseOrder))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(IncreaseOrder)3910_storage)"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_struct(SwapOrder)3953_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct OrderBook.SwapOrder))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(SwapOrder)3953_storage)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(DecreaseOrder)3935_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct OrderBook.DecreaseOrder)",
        "numberOfBytes": "32",
        "value": "t_struct(DecreaseOrder)3935_storage"
      },
      "t_mapping(t_uint256,t_struct(IncreaseOrder)3910_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct OrderBook.IncreaseOrder)",
        "numberOfBytes": "32",
        "value": "t_struct(IncreaseOrder)3910_storage"
      },
      "t_mapping(t_uint256,t_struct(IndexValue)23243_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct IndexValue)",
        "numberOfBytes": "32",
        "value": "t_struct(IndexValue)23243_storage"
      },
      "t_mapping(t_uint256,t_struct(SwapOrder)3953_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct OrderBook.SwapOrder)",
        "numberOfBytes": "32",
        "value": "t_struct(SwapOrder)3953_storage"
      },
      "t_struct(DecreaseOrder)3935_storage": {
        "encoding": "inplace",
        "label": "struct OrderBook.DecreaseOrder",
        "members": [
          {
            "astId": 3912,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "account",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 3914,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "collateralToken",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 3916,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "receiveToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 3918,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "collateralDelta",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 3920,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "indexToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address"
          },
          {
            "astId": 3922,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "sizeDelta",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 3924,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "isLong",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          },
          {
            "astId": 3926,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "triggerPrice",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 3928,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "triggerAboveThreshold",
            "offset": 0,
            "slot": "8",
            "type": "t_bool"
          },
          {
            "astId": 3930,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "minOut",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 3932,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "withdrawETH",
            "offset": 0,
            "slot": "10",
            "type": "t_bool"
          },
          {
            "astId": 3934,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "executionFee",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "384"
      },
      "t_struct(IncreaseOrder)3910_storage": {
        "encoding": "inplace",
        "label": "struct OrderBook.IncreaseOrder",
        "members": [
          {
            "astId": 3891,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "account",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 3893,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "purchaseToken",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 3895,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "purchaseTokenAmount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 3897,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "collateralToken",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 3899,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "indexToken",
            "offset": 0,
            "slot": "4",
            "type": "t_address"
          },
          {
            "astId": 3901,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "sizeDelta",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 3903,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "isLong",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          },
          {
            "astId": 3905,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "triggerPrice",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 3907,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "triggerAboveThreshold",
            "offset": 0,
            "slot": "8",
            "type": "t_bool"
          },
          {
            "astId": 3909,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "executionFee",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_struct(IndexValue)23243_storage": {
        "encoding": "inplace",
        "label": "struct IndexValue",
        "members": [
          {
            "astId": 23240,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "keyIndex",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 23242,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "value",
            "offset": 0,
            "slot": "1",
            "type": "t_struct(Orders)23238_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(KeyFlag)23248_storage": {
        "encoding": "inplace",
        "label": "struct KeyFlag",
        "members": [
          {
            "astId": 23245,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "key",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 23247,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "deleted",
            "offset": 0,
            "slot": "1",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Orders)23238_storage": {
        "encoding": "inplace",
        "label": "struct Orders",
        "members": [
          {
            "astId": 23233,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "account",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 23235,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "orderIndex",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 23237,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "orderType",
            "offset": 0,
            "slot": "2",
            "type": "t_enum(OrderType)23231"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(SwapOrder)3953_storage": {
        "encoding": "inplace",
        "label": "struct OrderBook.SwapOrder",
        "members": [
          {
            "astId": 3937,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "account",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 3940,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "path",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 3942,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "amountIn",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 3944,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "minOut",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 3946,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "triggerRatio",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 3948,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "triggerAboveThreshold",
            "offset": 0,
            "slot": "5",
            "type": "t_bool"
          },
          {
            "astId": 3950,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "shouldUnwrap",
            "offset": 1,
            "slot": "5",
            "type": "t_bool"
          },
          {
            "astId": 3952,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "executionFee",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(itmap)23258_storage": {
        "encoding": "inplace",
        "label": "struct itmap",
        "members": [
          {
            "astId": 23252,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "data",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(IndexValue)23243_storage)"
          },
          {
            "astId": 23255,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "keys",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_struct(KeyFlag)23248_storage)dyn_storage"
          },
          {
            "astId": 23257,
            "contract": "contracts/core/OrderBook.sol:OrderBook",
            "label": "size",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}